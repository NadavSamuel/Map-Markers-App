{"version":3,"sources":["assets/imgs/profile.jpg","assets/imgs/logo.png","pages/About.jsx","cmps/BlackScreen.jsx","cmps/Navbar.jsx","cmps/Footer.jsx","services/storageService.js","services/mainService.js","services/InitialCenterService.js","actions/placeActions.js","actions/notificationActions.js","cmps/InfoWindowEx.jsx","cmps/GoogleMap.jsx","cmps/PlaceDetails.jsx","services/customHooks.js","cmps/EditPlace.jsx","cmps/PlaceModal.jsx","cmps/TableCmp.jsx","cmps/CurrLocationBtn.jsx","cmps/Filter.jsx","pages/MainApp.jsx","cmps/Notification.jsx","App.jsx","serviceWorker.js","reducers/userReducer.js","reducers/systemReducer.js","reducers/placeReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","About","useEffect","window","scrollTo","className","src","require","alt","BlackScreen","closeMenu","onClick","Navbar","useState","isMenuShown","setIsMenuShown","to","Footer","href","LinkedinShareButton","url","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","mainService","query","filterBy","placesToReturn","gPlaces","title","filter","place","toLowerCase","includes","Promise","resolve","save","placeToSave","_id","idx","findIndex","item","splice","makeId","push","remove","id","getById","find","defaultItems","position","lat","lng","description","items","length","_loadPlaces","text","possible","i","charAt","Math","floor","random","initialCenterService","saveInitialCenter","loadInitialCenter","_removePlace","placeId","type","_setPlaces","places","_selectPlace","selectedPlace","selectPlace","dispatch","a","async","loadPlaces","removePlace","savePlace","getState","savedPlace","setNotification","kind","txt","isAliveNotification","console","log","setTimeout","InfoWindowEx","props","infoWindowRef","React","createRef","contentElement","document","createElement","ReactDOM","render","Children","only","children","current","infowindow","setContent","ref","GoogleApiWrapper","apiKey","useDispatch","zoom","setZoom","activeMarker","setactiveMarker","showingInfoWindow","setShowingInfoWindow","currPlace","setCurrPlace","isEditTitle","setisEditTitle","useSelector","state","placeReducer","initialCenter","center","elTitleInput","getEmptyState","isExsictingNotification","notificationReducer","toggleChangePlaceTitle","isNewTitle","infoWindowClass","style","width","height","containerStyle","google","mapProps","map","clickEvent","newPlace","latLng","marker","currPlaceId","onMarkerClick","visible","onClose","lcass","onSubmit","autoFocus","placeholder","name","value","onChange","ev","target","focus","Fragment","placeToDeleteId","currPlaceTitle","onDeletePlace","PlaceDetails","toggleIsEdit","onCloseModal","_setInitialCenter","useForm","initialState","cb","fields","setFields","event","EditPlace","placeToEdit","handleChange","htmlFor","cols","rows","PlaceModal","isEdit","setIsEdit","toggleEdit","editedPlace","preventDefault","classes","makeStyles","theme","modal","overflow","cursor","paper","maxWidth","minHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","right","top","margin","breakpoints","down","useStyles","Modal","open","TableCmp","placesToShow","setPlacesToShow","onSelectPlace","getPlacesToShow","windowSize","useMediaQuery","StyledTableCell","withStyles","head","color","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","table","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","scope","toFixed","getLat","getLng","closeModal","CurrLocationBtn","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","_setCenter","setCenter","err","warn","code","message","Filter","undefined","_setFilter","setFilter","autoComplete","MainApp","GoogleMap","Notification","notificationLifeCycle","clearTimeout","notificationBox","useRef","styles","fadeInDown","animation","animationName","Radium","keyframes","App","currNotification","path","Boolean","location","hostname","match","localLoggedinUser","sessionStorage","user","loggedInUser","users","isLoading","rootReducer","combineReducers","system","userId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.029dbac0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.36e27b4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7802c6aa.png\";","import React ,{useEffect} from 'react'\r\n\r\nexport function About() {\r\n  useEffect(() =>{\r\n    window.scrollTo(0,0)\r\n  }) \r\n  return (\r\n    <section className=\"about-container flex column align-center\">\r\n      <div className=\"profile-img-container flex justify-center\">\r\n        <img src={require('../assets/imgs/profile.jpg')} alt=\"\" /> \r\n      </div>\r\n      <div className=\"personal-txt-container\">\r\n        <h1>Hi! my name is Nadav Samuel and i'm a <span>Full-Stack</span> developer!</h1>\r\n        <p> hi hi hi by</p>\r\n      </div>\r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport function BlackScreen({ closeMenu }) {\r\n\r\n    return (\r\n        <div onClick={() => closeMenu()} className= \"black-screen\"></div>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BlackScreen } from './BlackScreen';\r\n\r\nexport function Navbar(){\r\n    const [isMenuShown,setIsMenuShown] = useState(false)\r\n\r\n    function getClass(){\r\n        return (isMenuShown) ? '' : 'hide';\r\n    }\r\n\r\n    function closeMenu () {\r\n        setIsMenuShown(false)\r\n    }\r\n\r\n    function navbarLayout() {\r\n        return isMenuShown ? 'column-layout mobile-links' : '';\r\n    }\r\n        return (\r\n            <header className=\"navbar flex align-center space-between  fill\">\r\n                <Link to=\"/\" className=\"flex align-center\"><img className='logo' src={require('../assets/imgs/logo.png')} alt=\"\" /></Link>\r\n                <MenuIcon onClick={() =>setIsMenuShown(true)} className='phone-view' ></MenuIcon>\r\n                <div className={`main-nav-container flex space-between full-width align-center justify-end ${getClass()}`}>\r\n\r\n                    <ul className={`clean-list flex  full-view clean-link-list ${navbarLayout()}`} >\r\n                        <Link to=\"/about\" onClick={closeMenu}><li>About</li></Link>\r\n                        {/* <Link to=\"/about\" onClick={closeMenu}><li>About</li></Link> */}\r\n                    </ul>\r\n                </div>\r\n                {isMenuShown && <BlackScreen closeMenu={closeMenu} />}\r\n            </header>\r\n\r\n        )\r\n}\r\n","import React from 'react'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {LinkedinShareButton} from \"react-share\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport function Footer() {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <footer className='flex justify-between align-center '>\r\n            <section className=\"footer-content-container flex full-width space-between\">\r\n            <div className=\"social-btns-container flex\">\r\n                  <a href={'https://github.com/NadavSamuel'} className=\"cursor-pointer\"><span> <GitHubIcon /></span></a> \r\n                <LinkedinShareButton url='https://www.linkedin.com/in/nadav-samuel-0b51291b9/'>\r\n                <span> <LinkedInIcon /></span>\r\n                </LinkedinShareButton>\r\n            </div>\r\n            <p className='flex align-center'><CopyrightIcon /> <span> Nadav Samuel 2020 </span>  </p>\r\n            </section>\r\n        </footer>\r\n\r\n    )\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from './storageService.js'\r\n\r\nexport const mainService  =  {\r\n    query,\r\n    save,\r\n    remove,\r\n    getById,\r\n    makeId,\r\n    // getEmptyCar\r\n}\r\n\r\nvar defaultItems = [\r\n    {position:{lat: 37.7873304289299, lng: -122.43072017185777},title:'Some place', _id: \"5PLfm\",description:'Ahlan wa sahalan'},\r\n    {position:{lat: 32.7873304289299, lng: -112.43072017185777},title:'Some other place', _id: \"43fag\",description:'Ahlan wa sahalan ya gever'},\r\n]\r\n\r\nconst STORAGE_KEY = 'places'\r\nconst gPlaces = _loadPlaces()\r\n\r\nfunction query(filterBy) {\r\n    // console.log('filter by in query func => ',filterBy)\r\n    let placesToReturn = gPlaces;\r\n    if (filterBy) {\r\n        var { title } = filterBy\r\n        placesToReturn = gPlaces.filter(place => place.title.toLowerCase().includes(title.toLowerCase()))\r\n    }\r\n    return Promise.resolve([...placesToReturn]);\r\n}\r\n\r\nfunction getById(id) {\r\n    const place = gPlaces.find(place => place._id === id)\r\n    return Promise.resolve(place)\r\n}\r\n\r\nfunction remove(id) {\r\n    const idx = gPlaces.findIndex(place => place._id === id)\r\n    gPlaces.splice(idx, 1)\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction save(placeToSave) {\r\n    if (placeToSave._id) {\r\n        const idx = gPlaces.findIndex(item => item._id === placeToSave._id)\r\n        gPlaces.splice(idx, 1, placeToSave)\r\n    } else {\r\n        placeToSave._id = makeId()\r\n        // placeToSave.imgName = 'default'\r\n        gPlaces.push(placeToSave)\r\n    }\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve(placeToSave);\r\n}\r\n// function getEmptyItem() {\r\n//     return Promise.resolve({\r\n//         vendor: '',\r\n//         speed: ''\r\n//     })\r\n// }\r\nfunction _loadPlaces() {\r\n    let items = storageService.loadFromStorage(STORAGE_KEY)\r\n    if (!items || !items.length) items = defaultItems\r\n    storageService.saveToStorage(STORAGE_KEY, items)\r\n    return items\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { storageService } from './storageService.js'\r\n\r\nexport const initialCenterService  =  {\r\n    saveInitialCenter,\r\n    loadInitialCenter\r\n}\r\n\r\nconst STORAGE_KEY = 'initial-center'\r\n\r\nfunction saveInitialCenter(position){\r\n    storageService.saveToStorage(STORAGE_KEY,position)\r\n}\r\nfunction loadInitialCenter(){\r\n    return storageService.loadFromStorage(STORAGE_KEY)\r\n}\r\n","import { mainService } from '../services/mainService';\r\nimport {initialCenterService} from '../services/InitialCenterService'\r\n// Dispatchers\r\nconst _removePlace = (placeId) => ({ type: 'REMOVE_PLACE', placeId });\r\nconst _setPlaces = (places) => ({ type: 'SET_PLACES', places });\r\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\r\nconst _selectPlace = (selectedPlace) => ({ type: 'SELECT_PLACE', selectedPlace });\r\nconst _setInitialCenter = (position) => ({ type: 'SET_INITIAL_CENTER', initialCenter:position });\r\nconst _setCenter = (position) => ({ type: 'SET_CENTER', position });\r\n\r\n// THUNK\r\nexport function selectPlace(placeId) {\r\n    return async (dispatch) => {\r\n        const selectedPlace = await mainService.getById(placeId);\r\n        dispatch(_selectPlace(selectedPlace));\r\n    }\r\n}\r\nexport function setInitialCenter(position) {\r\n    initialCenterService.saveInitialCenter(position)\r\n    return (dispatch) => dispatch(_setInitialCenter(position))\r\n}\r\nexport function setCenter(position) {\r\n    console.log('in set center, position is => ',position)\r\n    return (dispatch) => dispatch(_setCenter(position))\r\n}\r\n// export function loadPlace(placeId) {\r\n//     return async (dispatch) => {\r\n//         const placeToLoad = await mainService.getById(placeId);\r\n//         dispatch(_loadPlace(placeToLoad));\r\n//     }\r\n// }\r\nexport function loadPlaces(filterBy) {\r\n    return async (dispatch) => {\r\n        const places = await mainService.query(filterBy);\r\n        dispatch(_setPlaces(places));\r\n    }\r\n}\r\nexport function removePlace(placeId) {\r\n    return async (dispatch) => {\r\n        mainService.remove(placeId)\r\n        dispatch(_removePlace(placeId))\r\n    }\r\n}\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => dispatch(_setFilter(filterBy))\r\n}\r\n\r\nexport  function savePlace(place) {\r\n    return async (dispatch,getState) => {\r\n        const savedPlace = await mainService.save(place)\r\n        const type = place._id ? 'UPDATE_PLACE' : 'ADD_PLACE';\r\n        dispatch({ type, place: savedPlace })  \r\n    }\r\n}\r\n\r\n\r\n","\r\nexport function setNotification(kind, txt, isAliveNotification = false) {\r\n    console.log('is notification alive? ', isAliveNotification)\r\n    if (isAliveNotification) {\r\n        return dispatch => {\r\n            dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n            setTimeout(() =>{\r\n                dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n            },10)\r\n        }\r\n    }\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n    }\r\n}\r\n\r\nexport function clearNotification() {\r\n    return dispatch => {\r\n        dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport default function InfoWindowEx(props) {\r\n  const infoWindowRef = React.createRef();\r\n  const contentElement = document.createElement(`div`);\r\n  useEffect(() => {\r\n    ReactDOM.render(React.Children.only(props.children), contentElement);\r\n    infoWindowRef.current.infowindow.setContent(contentElement);\r\n  }, [props.children]);\r\n  return <InfoWindow ref={infoWindowRef} {...props} />;\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mainService } from '../services/mainService'\r\nimport {  loadPlaces, savePlace, removePlace } from '../actions/placeActions.js';\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport InfoWindowEx from '../cmps/InfoWindowEx'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nfunction _GoogleMap(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [zoom, setZoom] = useState(7)\r\n  const [activeMarker, setactiveMarker] = useState(null)\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false)\r\n  const [currPlace, setCurrPlace] = useState(null)\r\n  const [isEditTitle, setisEditTitle] = useState(false)\r\n\r\n  const { places, initialCenter, center } = useSelector(state => state.placeReducer);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loadPlaces())\r\n    if (center) onSetZoom()\r\n  }, [center])\r\n\r\n  function onSetZoom() {\r\n    setZoom(15)\r\n    setTimeout(() => {\r\n      setZoom(null)\r\n    }, 10)\r\n\r\n  }\r\n  function handleInput(ev) {\r\n    const { name, value } = ev.target;\r\n    setCurrPlace({ ...currPlace, [name]: value })\r\n    elTitleInput.current.focus()\r\n  };\r\n  const elTitleInput = React.createRef()\r\n\r\n  async function onMapClick(mapProps, map, clickEvent) {\r\n    const newPlace = {\r\n      position: {\r\n        lat: clickEvent.latLng.lat(),\r\n        lng: clickEvent.latLng.lng(),\r\n      },\r\n      title: '',\r\n      description: ''\r\n    }\r\n    dispatch(savePlace(newPlace))\r\n    dispatch(loadPlaces())\r\n  }\r\n  async function onMarkerClick(props, marker, clickEvent, currPlaceId) {\r\n    const currPlace = await mainService.getById(currPlaceId)\r\n    setCurrPlace(currPlace)\r\n    setactiveMarker(marker)\r\n    setShowingInfoWindow(true)\r\n  }\r\n\r\n  function getEmptyState() {\r\n    setShowingInfoWindow(false)\r\n    setactiveMarker(null)\r\n    setCurrPlace(null)\r\n    setisEditTitle(false)\r\n\r\n  }\r\n  function onInfoWindowClose() {\r\n    getEmptyState()\r\n  }\r\n  const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n  async function onDeletePlace() {\r\n    const placeToDeleteId = currPlace._id\r\n    const currPlaceTitle = currPlace.title || 'Unknown place'\r\n    try {\r\n      getEmptyState()\r\n       dispatch(removePlace(placeToDeleteId))\r\n       dispatch(loadPlaces)\r\n       dispatch(setNotification('success', `Successfully deleted ${currPlaceTitle}`,!!isExsictingNotification))\r\n    } catch {\r\n       dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n    }\r\n  }\r\n\r\n\r\n  function toggleChangePlaceTitle(isNewTitle = false) {\r\n    if (isNewTitle) dispatch(savePlace(currPlace))\r\n    setisEditTitle(!isEditTitle)\r\n  }\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n  }\r\n  const style = {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n  const infoWindowClass = isEditTitle ? 'edit-title flex' : 'info-window'\r\n  return (\r\n    <div className=\"map-wraper\">\r\n      <Map style={style} containerStyle={containerStyle}\r\n        google={props.google} zoom={zoom}\r\n        onClick={onMapClick}\r\n        initialCenter={initialCenter}\r\n        center={center}>\r\n        {places.map((place, idx) => {\r\n          return <Marker key={place._id} onClick={(props, marker, clickEvent) => onMarkerClick(props, marker, clickEvent, place._id)}\r\n            position={place.position} />\r\n\r\n        })}\r\n        {activeMarker && <InfoWindowEx visible={showingInfoWindow} marker={activeMarker} onClose={onInfoWindowClose}>\r\n          <div lcass=\"info-window\" className={infoWindowClass}>\r\n            {!isEditTitle ?\r\n              <React.Fragment><h2>{currPlace.title || 'No title yet'}</h2>\r\n                <div className=\"btns-container\">\r\n                  <button onClick={toggleChangePlaceTitle}>Change title</button>\r\n                  <button onClick={() => onDeletePlace(activeMarker._id)}>Delete</button>\r\n                </div>\r\n              </React.Fragment>\r\n              :\r\n              <form className=\"column-layout\" onSubmit={() => toggleChangePlaceTitle(true)}>\r\n                <input autoFocus\r\n                  ref={elTitleInput} placeholder=\"Enter place name\" name=\"title\" value={currPlace.title} onChange={handleInput} />\r\n                <button >Save new title</button>\r\n              </form>}\r\n\r\n          </div>\r\n        </InfoWindowEx>}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\nexport default (GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_GoogleMap))\r\n\r\n\r\n","import React from 'react';\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setInitialCenter,removePlace,loadPlaces} from '../actions/placeActions.js';\r\nimport { setNotification} from '../actions/notificationActions'\r\n\r\nexport function _PlaceDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const {  place, toggleIsEdit,onCloseModal } = props\r\n    const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n     function onSetInitialCenter() {\r\n        try {\r\n             dispatch(setInitialCenter(place.position))\r\n\r\n             dispatch(setNotification('success', `successfully saved ${place.title || 'Unknown place '} as initial center`,!!isExsictingNotification))\r\n        }\r\n        catch {\r\n             dispatch(setNotification('err', `OOPS! something went wrong, could'nt save current place as initial center`))\r\n        }\r\n    }\r\n     function onDeletePlace() {\r\n        const currPlaceTitle = place.title || 'Unknown place'\r\n        try {\r\n             onCloseModal()\r\n             dispatch(removePlace(place._id))\r\n             dispatch(loadPlaces())\r\n             dispatch(setNotification('success', `Successfully deleted ${currPlaceTitle}`,!!isExsictingNotification))\r\n            }\r\n        catch {\r\n            dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"place-details-container\">\r\n                <h1>{place.title || 'No title yet'}</h1>\r\n                <div className=\"map-wraper-modal\">\r\n                    <Map\r\n                        google={props.google} zoom={7}\r\n                        initialCenter={place.position}>\r\n                        <Marker\r\n                            position={place.position}\r\n                            name={'Current location'} />\r\n                    </Map>\r\n                </div>\r\n                <div className=\"place-details\">\r\n                    <h3><span>Latitude: </span>{place.position.lat}</h3>\r\n                    <h3><span>Langtitude: </span>{place.position.lng}</h3>\r\n                    <h3>Description:</h3>\r\n                    <p>{place.description || 'No description yet'}</p>\r\n                </div>\r\n                <div className=\"action-btns flex\">\r\n                    <button onClick={toggleIsEdit}>Edit </button>\r\n                    <button onClick={onSetInitialCenter}>Set as initial center </button>\r\n                    <button onClick={onDeletePlace}>Delete </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport const PlaceDetails = (GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_PlaceDetails))\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n        },\r\n    ];\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\n\r\n\r\nexport function EditPlace(props) {\r\n    const { toggleIsEdit, place } = props\r\n    const [placeToEdit, handleChange] = useForm({ ...place })\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={(event) => toggleIsEdit(event, placeToEdit)} className=\"place-edit-form \">\r\n                    <label htmlFor=\"title\">Title: </label>\r\n                    <input name=\"title\" type=\"text\" value={placeToEdit.title} onChange={handleChange} />\r\n                <label htmlFor=\"Description\">Description: </label>\r\n                <textarea name=\"description\" id=\"\" cols=\"30\" rows=\"10\" value={placeToEdit.description} onChange={handleChange}></textarea>\r\n                <button >Edit </button>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { PlaceDetails } from '../cmps/PlaceDetails'\r\nimport { EditPlace } from '../cmps/EditPlace'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { loadPlaces,savePlace,selectPlace } from '../actions/placeActions.js';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nexport function PlaceModal(props) {\r\n    const place = useSelector(state => state.placeReducer.selectedPlace);\r\n    const dispatch = useDispatch()\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    \r\n    async function toggleEdit(ev, editedPlace = null) {\r\n        if (editedPlace) {\r\n            ev.preventDefault()\r\n            dispatch(savePlace(editedPlace))\r\n            dispatch(selectPlace(editedPlace._id))\r\n            dispatch(loadPlaces())\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        dispatch(selectPlace(null))\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            overflow: 'scroll',\r\n            cursor: 'pointer'\r\n        },\r\n        paper: {\r\n            cursor: 'auto',\r\n            position: 'absolute',\r\n            maxWidth: 400,\r\n            minHeight: 500,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            left: 0,\r\n            right: 0,\r\n            top: '40px',\r\n            margin: '0 auto',\r\n            [theme.breakpoints.down('xs')]: {\r\n                maxWidth: 300,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!place) return <div>Loading...</div>\r\n    return (\r\n        <Modal\r\n            open={!!place}\r\n            onClose={onCloseModal}\r\n            className={classes.modal}>\r\n            <section className={`${classes.paper} column-layout`}>\r\n                <button className=\"close-btn align-self-start\" onClick={onCloseModal}></button>\r\n                {isEdit ? <EditPlace toggleIsEdit={toggleEdit} classes={classes} place={place} /> :\r\n                    <PlaceDetails onCloseModal={onCloseModal} toggleIsEdit={(event) => toggleEdit(event)} classes={classes}  place={place} />}\r\n            </section>\r\n\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PlaceModal } from '../cmps/PlaceModal'\r\nimport { selectPlace } from '../actions/placeActions.js';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\n\r\nexport function TableCmp(props) {\r\n    const dispatch = useDispatch()\r\n    const { filterBy, selectedPlace,places } = useSelector(state => state.placeReducer)\r\n\r\n    let [placesToShow,setPlacesToShow] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPlacesToShow(filterBy)\r\n    }, [places,filterBy])\r\n\r\n    async function getPlacesToShow(filterBy ) {\r\n        // debugger\r\n        console.log('filter by is => ,',filterBy)\r\n        if(filterBy && filterBy.title){\r\n            const { title } = filterBy\r\n            setPlacesToShow(placesToShow = places.filter(place => place.title.toLowerCase().includes(title.toLowerCase())) ) \r\n        }else{\r\n            setPlacesToShow(placesToShow = places)\r\n        } \r\n    }\r\n\r\n    function onSelectPlace(placeId = '') {\r\n        dispatch(selectPlace(placeId))\r\n    }\r\n\r\n    const windowSize = useMediaQuery('(max-width:600px)');\r\n    function getLat(place) {\r\n        if (!windowSize) return place.position.lat\r\n        else return place.position.lat.toFixed(2) + '...'\r\n    }\r\n    function getLng(place) {\r\n        if (!windowSize) return place.position.lng\r\n        else return place.position.lng.toFixed(2) + '...'\r\n    }\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: '#01c5c4',\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: 10,\r\n                fontSize: 12\r\n            },\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n    const useStyles = makeStyles((theme) => ({\r\n        table: {\r\n            width: '100%',\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    if (!placesToShow.length) return <h1>No matching results</h1>\r\n    else return (\r\n        <React.Fragment>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Name </StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lang</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lat</StyledTableCell>\r\n                            <StyledTableCell align=\"left\"></StyledTableCell>\r\n                        </TableRow>\r\n\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {placesToShow.map((place) => (\r\n                            <StyledTableRow key={place._id}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {place.title || 'No name yet'}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{getLat(place)}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{getLng(place)}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\" className=\"description-slot column-layout\">\r\n\r\n                                    <button onClick={() => onSelectPlace(place._id)}>Show more</button>\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {selectedPlace && <PlaceModal closeModal={onSelectPlace} place={selectedPlace} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport { setCenter } from '../actions/placeActions'\r\n\r\nexport function CurrLocationBtn(props) {\r\n    const dispatch = useDispatch()\r\n    function onSetCurrLocation() {\r\n\r\n        function setCurrLocation(pos) {\r\n            const position = {\r\n                lat: pos.coords.latitude,\r\n                lng: pos.coords.longitude\r\n            }\r\n            dispatch(setCenter(position))\r\n        }\r\n        function error(err) {\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n            dispatch(setNotification('err', `OOPS! Could'nt get your current location`))\r\n        }\r\n        navigator.geolocation.getCurrentPosition(setCurrLocation, error);\r\n    }\r\n    return (\r\n        <button onClick={onSetCurrLocation} className=\"align-self-start\">Set your location!</button>\r\n    );\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\nimport { useDispatch,  } from 'react-redux'\r\nimport { setFilter } from '../actions/placeActions.js';\r\n\r\nexport function Filter() {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [filterBy, handleChange] = useForm({ title: ''},onFilter)\r\n    const { title } = filterBy\r\n                function onFilter() {\r\n                    if(filterBy === undefined) return\r\n                    dispatch(setFilter(filterBy))\r\n                }\r\n        return (\r\n            <div className=\"places-filter-container\">\r\n                <input autoComplete=\"off\" name=\"title\" type=\"text\" value={title} onChange={handleChange} placeholder=\"Search for a place\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n","import React from 'react';\r\nimport GoogleMap from '../cmps/GoogleMap'\r\nimport { TableCmp } from '../cmps/TableCmp'\r\nimport {CurrLocationBtn} from '../cmps/CurrLocationBtn'\r\nimport {Filter} from '../cmps/Filter'\r\n\r\nexport function MainApp(props){\r\n\r\n    return (\r\n\r\n      <section className=\"main-app-container  column-layout\" >\r\n        <section className=\"column-layout\">\r\n          <h1>Map Markers</h1>\r\n          <CurrLocationBtn />\r\n          <GoogleMap />\r\n        </section>\r\n        <section className=\"table-cmp-container\">\r\n          <Filter/>\r\n          <TableCmp />\r\n        </section>\r\n      </section>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { fadeInDown, fadeOutUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { clearNotification } from '../actions/notificationActions.js'\r\n// import ClearIcon from '@material-ui/icons/Clear';\r\n// import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n// import CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\r\n\r\nexport function Notification(props) {\r\n    const dispatch = useDispatch()\r\n    let notificationLifeCycle = null\r\n\r\n\r\n    useEffect(() => {\r\n        notificationLifeCycle = setTimeout(() => {\r\n            dispatch(clearNotification())\r\n        }, 4000)\r\n        return () =>{\r\n            clearTimeout(notificationLifeCycle)\r\n        }\r\n    })\r\n    const { kind, txt } = useSelector(state => state.notificationReducer);\r\n    const notificationBox = useRef(null)\r\n\r\n    const styles = {\r\n        fadeInDown: {\r\n            animation: 'x 0.5s',\r\n            animationName: Radium.keyframes(fadeInDown, 'fadeInDown')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <StyleRoot>\r\n            <div ref={notificationBox} style={styles.fadeInDown} className={`notification-box ${kind}`}>\r\n                <p>\r\n                    {txt}\r\n                </p>\r\n            </div>\r\n        </StyleRoot >\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { About } from './pages/About';\nimport { Navbar } from './cmps/Navbar';\nimport { Footer } from './cmps/Footer';\nimport { MainApp } from './pages/MainApp'\nimport {Notification} from './cmps/Notification'\nimport {  useSelector } from 'react-redux'\n\n\n\nfunction App() {\n  const currNotification = useSelector(state => state.notificationReducer.txt);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <main>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={MainApp} />\n        </Switch>\n        </main>\n        <Footer/>\n      </Router>\n        {currNotification &&<Notification/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import {initialCenterService} from '../services/InitialCenterService'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    filterBy: null,\r\n    selectedPlace:null,\r\n    initialCenter:initialCenterService.loadInitialCenter() ||{\r\n        lat: 40.854885,\r\n        lng: -88.081807\r\n      },\r\n    center:null,\r\n    // isUserGeolocation:null\r\n}\r\n\r\nexport function placeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PLACES':\r\n            return {\r\n                ...state,\r\n                places: action.places\r\n            }\r\n        case 'SET_INITIAL_CENTER':\r\n            return {\r\n                ...state,\r\n                initialCenter: action.position\r\n            }\r\n        case 'SET_CENTER':\r\n            return {\r\n                ...state,\r\n                center: action.position,\r\n                // isUserGeolocation:action.isUserGeolocation\r\n            }\r\n            case 'SELECT_PLACE':\r\n                return {\r\n                    ...state,\r\n                    selectedPlace: action.selectedPlace\r\n                }\r\n            case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filterBy\r\n            }\r\n        case 'ADD_PLACE':\r\n            return {\r\n                ...state,\r\n                places: [...state.places, action.place]\r\n            }\r\n        case 'UPDATE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.map(place => {\r\n                    if (place._id === action.place._id) return action.place;\r\n                    return place;\r\n                })\r\n            }\r\n        case 'REMOVE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.filter(place => place._id !== action.placeId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    txt: '',\r\n    kind: ''\r\n}\r\n\r\nexport function notificationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: action.txt,\r\n                kind: action.kind\r\n            }\r\n        case 'CLEAR_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: '',\r\n                kind:''\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer'\r\nimport systemReducer from './systemReducer';\r\nimport { placeReducer } from './placeReducer';\r\nimport { notificationReducer } from './notificationReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  placeReducer: placeReducer,\r\n  notificationReducer:notificationReducer,\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}