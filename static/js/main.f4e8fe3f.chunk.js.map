{"version":3,"sources":["assets/imgs/profile.jpg","assets/imgs/logo.png","pages/About.jsx","cmps/BlackScreen.jsx","cmps/Navbar.jsx","cmps/Footer.jsx","services/storageService.js","services/mainService.js","services/InitialCenterService.js","actions/placeActions.js","actions/notificationActions.js","cmps/InfoWindowEx.jsx","cmps/GoogleMap.jsx","services/googleResturantsService.js","cmps/PlaceDetails.jsx","services/customHooks.js","cmps/EditPlace.jsx","cmps/PlaceModal.jsx","cmps/TableCmp.jsx","cmps/CurrLocationBtn.jsx","cmps/Filter.jsx","pages/MainApp.jsx","cmps/Notification.jsx","App.jsx","serviceWorker.js","reducers/userReducer.js","reducers/systemReducer.js","reducers/placeReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","About","useEffect","window","scrollTo","className","src","require","alt","BlackScreen","closeMenu","onClick","Navbar","useState","isMenuShown","setIsMenuShown","isHideMenu","navbarLayout","useMediaQuery","to","Footer","href","LinkedinShareButton","url","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","mainService","query","filterBy","placesToReturn","gPlaces","title","filter","place","toLowerCase","includes","Promise","resolve","save","placeToSave","_id","idx","findIndex","item","splice","makeId","push","remove","id","getById","find","saveReorgenizedPlaces","reOrgenizedPlaces","Array","from","defaultItems","position","lat","lng","description","items","length","_loadPlaces","text","possible","i","charAt","Math","floor","random","initialCenterService","saveInitialCenter","loadInitialCenter","_removePlace","placeId","type","_setPlaces","places","_selectPlace","selectedPlace","selectPlace","dispatch","a","async","loadPlaces","removePlace","savePlace","getState","savedPlace","setNotification","kind","txt","isAliveNotification","setTimeout","InfoWindowEx","props","infoWindowRef","React","createRef","contentElement","document","createElement","ReactDOM","render","Children","only","children","current","infowindow","setContent","ref","GoogleApiWrapper","apiKey","useDispatch","zoom","setZoom","activeMarker","setactiveMarker","showingInfoWindow","setShowingInfoWindow","currPlace","setCurrPlace","isEditTitle","setisEditTitle","useSelector","state","placeReducer","initialCenter","center","elTitleInput","getEmptyState","isExsictingNotification","notificationReducer","toggleChangePlaceTitle","isNewTitle","infoWindowClass","style","width","height","containerStyle","google","mapProps","map","clickEvent","newPlace","latLng","marker","currPlaceId","onMarkerClick","visible","onClose","lcass","onSubmit","autoFocus","placeholder","name","value","onChange","ev","target","focus","Fragment","placeToDeleteId","currPlaceTitle","onDeletePlace","googleResturantsService","getResturantsFromGoogle","lang","axios","get","resturants","console","log","response","data","status","headers","request","message","PlaceDetails","toggleIsEdit","onCloseModal","_setInitialCenter","useForm","initialState","cb","fields","setFields","event","EditPlace","placeToEdit","handleChange","htmlFor","cols","rows","PlaceModal","isEdit","setIsEdit","toggleEdit","editedPlace","preventDefault","classes","makeStyles","theme","modal","overflow","cursor","paper","maxWidth","minHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","right","top","margin","breakpoints","down","useStyles","Modal","open","TableCmp","placesToShow","setPlacesToShow","onSelectPlace","getPlacesToShow","windowSize","StyledTableCell","withStyles","head","color","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","table","TableContainer","component","Paper","Table","aria-label","TableHead","align","onDragEnd","res","destination","source","index","recordedPlace","reOrganizePlaces","droppableId","provided","TableBody","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","scope","toFixed","getLat","getLng","closeModal","CurrLocationBtn","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","_setCenter","setCenter","err","warn","code","Filter","undefined","_setFilter","setFilter","autoComplete","MainApp","GoogleMap","Notification","notificationLifeCycle","clearTimeout","notificationBox","useRef","styles","fadeInDown","animation","animationName","Radium","keyframes","App","currNotification","path","Boolean","location","hostname","match","localLoggedinUser","sessionStorage","user","loggedInUser","users","isLoading","rootReducer","combineReducers","system","userId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4e8fe3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.36e27b4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7802c6aa.png\";","import React, { useEffect } from 'react'\r\n\r\nexport function About() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  })\r\n  return (\r\n    <section className=\"about-container flex column align-center\">\r\n      <div className=\"profile-img-container flex justify-center\">\r\n        <img src={require('../assets/imgs/profile.jpg')} alt=\"\" />\r\n      </div>\r\n      <div className=\"personal-txt-container\">\r\n        <h1>Hi! my name is Nadav Samuel and i'm a <span>Full-Stack</span> developer!</h1>\r\n        <p> I'm 22 years old, born in Givaataim, Israel. \r\n        Motivational fullstack web developer. People person and a team player.\r\n        <br/>\r\n        <br/>\r\n        <span>samuelna9@gmail.com </span>\r\n\r\n</p>\r\n      </div>\r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport function BlackScreen({ closeMenu }) {\r\n\r\n    return (\r\n        <div onClick={() => closeMenu()} className= \"black-screen\"></div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BlackScreen } from './BlackScreen';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport function Navbar() {\r\n    const [isMenuShown, setIsMenuShown] = useState(false)\r\n    const windowSize = useMediaQuery('(min-width:700px)');\r\n    function closeMenu() {\r\n        setIsMenuShown(false)\r\n    }\r\n    const isHideMenu = (isMenuShown ? '' : 'hide');\r\n    const navbarLayout = (!windowSize ? 'column-layout mobile-links' : '');\r\n    return (\r\n        <header className=\"navbar flex align-center space-between  fill\">\r\n            <div className=\"navbar-container flex space-between full-width\">\r\n                <Link to=\"/\" className=\"flex align-center full-width space-between\"><img className='logo' src={require('../assets/imgs/logo.png')} alt=\"\" />\r\n                <MenuIcon onClick={() => setIsMenuShown(true)} className='phone-view ' ></MenuIcon></Link>\r\n                <div className={`main-nav-container flex space-between full-width align-center justify-end ${isHideMenu}`}>\r\n                    <ul className={`clean-list flex  full-view clean-link-list ${navbarLayout}`} >\r\n                        <Link to=\"/about\" onClick={closeMenu}><li>About</li></Link>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {isMenuShown && <BlackScreen closeMenu={closeMenu} />}\r\n\r\n        </header>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {LinkedinShareButton} from \"react-share\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport function Footer() {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <footer className='flex justify-between align-center '>\r\n            <section className=\"footer-content-container flex full-width space-between\">\r\n            <div className=\"social-btns-container flex\">\r\n                  <a href={'https://github.com/NadavSamuel'} className=\"cursor-pointer\"><span> <GitHubIcon /></span></a> \r\n                <LinkedinShareButton url='https://www.linkedin.com/in/nadav-samuel-0b51291b9/'>\r\n                <span> <LinkedInIcon /></span>\r\n                </LinkedinShareButton>\r\n            </div>\r\n            <p className='flex align-center'><CopyrightIcon /> <span> Nadav Samuel 2020 </span>  </p>\r\n            </section>\r\n        </footer>\r\n\r\n    )\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from './storageService.js'\r\n\r\nexport const mainService  =  {\r\n    query,\r\n    save,\r\n    remove,\r\n    getById,\r\n    makeId,\r\n    saveReorgenizedPlaces\r\n}\r\n\r\nvar defaultItems = [\r\n    {position:{lat: 37.7873304289299, lng: -122.43072017185777},title:'Some place', _id: \"5PLfm\",description:'Ahlan wa sahalan'},\r\n    {position:{lat: 32.7873304289299, lng: -112.43072017185777},title:'Some other place', _id: \"43fag\",description:'Ahlan wa sahalan ya gever'},\r\n]\r\n\r\nconst STORAGE_KEY = 'places'\r\nlet gPlaces = _loadPlaces()\r\n\r\nfunction query(filterBy) {\r\n    let placesToReturn = gPlaces;\r\n    if (filterBy) {\r\n        var { title } = filterBy\r\n        placesToReturn = gPlaces.filter(place => place.title.toLowerCase().includes(title.toLowerCase()))\r\n    }\r\n    return Promise.resolve([...placesToReturn]);\r\n}\r\n\r\nfunction getById(id) {\r\n    const place = gPlaces.find(place => place._id === id)\r\n    return Promise.resolve(place)\r\n}\r\n\r\nfunction remove(id) {\r\n    const idx = gPlaces.findIndex(place => place._id === id)\r\n    gPlaces.splice(idx, 1)\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction save(placeToSave) {\r\n    if (placeToSave._id) {\r\n        const idx = gPlaces.findIndex(item => item._id === placeToSave._id)\r\n        gPlaces.splice(idx, 1, placeToSave)\r\n    } else {\r\n        placeToSave._id = makeId()\r\n        gPlaces.push(placeToSave)\r\n    }\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve(placeToSave);\r\n}\r\nfunction saveReorgenizedPlaces(reOrgenizedPlaces){\r\n    gPlaces = Array.from(reOrgenizedPlaces)\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n\r\n}\r\n\r\nfunction _loadPlaces() {\r\n    let items = storageService.loadFromStorage(STORAGE_KEY)\r\n    if (!items || !items.length) items = defaultItems\r\n    storageService.saveToStorage(STORAGE_KEY, items)\r\n    return items\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { storageService } from './storageService.js'\r\n\r\nexport const initialCenterService  =  {\r\n    saveInitialCenter,\r\n    loadInitialCenter\r\n}\r\n\r\nconst STORAGE_KEY = 'initial-center'\r\n\r\nfunction saveInitialCenter(position){\r\n    storageService.saveToStorage(STORAGE_KEY,position)\r\n}\r\nfunction loadInitialCenter(){\r\n    return storageService.loadFromStorage(STORAGE_KEY)\r\n}\r\n","import { mainService } from '../services/mainService';\r\nimport {initialCenterService} from '../services/InitialCenterService'\r\n// Dispatchers\r\nconst _removePlace = (placeId) => ({ type: 'REMOVE_PLACE', placeId });\r\nconst _setPlaces = (places) => ({ type: 'SET_PLACES', places });\r\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\r\nconst _selectPlace = (selectedPlace) => ({ type: 'SELECT_PLACE', selectedPlace });\r\nconst _setInitialCenter = (position) => ({ type: 'SET_INITIAL_CENTER', initialCenter:position });\r\nconst _setCenter = (position) => ({ type: 'SET_CENTER', position });\r\n\r\n// THUNK\r\nexport function selectPlace(placeId) {\r\n    return async (dispatch) => {\r\n        const selectedPlace = await mainService.getById(placeId);\r\n        dispatch(_selectPlace(selectedPlace));\r\n    }\r\n}\r\nexport function setInitialCenter(position) {\r\n    initialCenterService.saveInitialCenter(position)\r\n    return (dispatch) => dispatch(_setInitialCenter(position))\r\n}\r\nexport function setCenter(position) {\r\n    return (dispatch) => dispatch(_setCenter(position))\r\n}\r\n// export function loadPlace(placeId) {\r\n//     return async (dispatch) => {\r\n//         const placeToLoad = await mainService.getById(placeId);\r\n//         dispatch(_loadPlace(placeToLoad));\r\n//     }\r\n// }\r\nexport function loadPlaces(filterBy) {\r\n    return async (dispatch) => {\r\n        const places = await mainService.query(filterBy);\r\n        dispatch(_setPlaces(places));\r\n    }\r\n}\r\nexport function reOrganizePlaces(places) {\r\n    return async (dispatch) => {\r\n        dispatch(_setPlaces(places));\r\n    }\r\n}\r\nexport function removePlace(placeId) {\r\n    return async (dispatch) => {\r\n        mainService.remove(placeId)\r\n        dispatch(_removePlace(placeId))\r\n    }\r\n}\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => dispatch(_setFilter(filterBy))\r\n}\r\n\r\nexport  function savePlace(place) {\r\n    return async (dispatch,getState) => {\r\n        const savedPlace = await mainService.save(place)\r\n        const type = place._id ? 'UPDATE_PLACE' : 'ADD_PLACE';\r\n        dispatch({ type, place: savedPlace })  \r\n    }\r\n}\r\n\r\n\r\n","\r\nexport function setNotification(kind, txt, isAliveNotification = false) {\r\n    if (isAliveNotification) {\r\n        return dispatch => {\r\n            dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n            setTimeout(() =>{\r\n                dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n            },10)\r\n        }\r\n    }\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n    }\r\n}\r\n\r\nexport function clearNotification() {\r\n    return dispatch => {\r\n        dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport default function InfoWindowEx(props) {\r\n  const infoWindowRef = React.createRef();\r\n  const contentElement = document.createElement(`div`);\r\n  useEffect(() => {\r\n    ReactDOM.render(React.Children.only(props.children), contentElement);\r\n    infoWindowRef.current.infowindow.setContent(contentElement);\r\n  }, [props.children]);\r\n  return <InfoWindow ref={infoWindowRef} {...props} />;\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mainService } from '../services/mainService'\r\nimport {  loadPlaces, savePlace, removePlace } from '../actions/placeActions.js';\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport InfoWindowEx from '../cmps/InfoWindowEx'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nfunction _GoogleMap(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [zoom, setZoom] = useState(7)\r\n  const [activeMarker, setactiveMarker] = useState(null)\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false)\r\n  const [currPlace, setCurrPlace] = useState(null)\r\n  const [isEditTitle, setisEditTitle] = useState(false)\r\n\r\n  const { places, initialCenter, center } = useSelector(state => state.placeReducer);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loadPlaces())\r\n    if (center) onSetZoom()\r\n  }, [center])\r\n\r\n  function onSetZoom() {\r\n    setZoom(15)\r\n    setTimeout(() => {\r\n      setZoom(null)\r\n    }, 10)\r\n\r\n  }\r\n  function handleInput(ev) {\r\n    const { name, value } = ev.target;\r\n    setCurrPlace({ ...currPlace, [name]: value })\r\n    elTitleInput.current.focus()\r\n  };\r\n  const elTitleInput = React.createRef()\r\n\r\n  async function onMapClick(mapProps, map, clickEvent) {\r\n    const newPlace = {\r\n      position: {\r\n        lat: clickEvent.latLng.lat(),\r\n        lng: clickEvent.latLng.lng(),\r\n      },\r\n      title: '',\r\n      description: ''\r\n    }\r\n    dispatch(savePlace(newPlace))\r\n    dispatch(loadPlaces())\r\n  }\r\n  async function onMarkerClick(props, marker, clickEvent, currPlaceId) {\r\n    const currPlace = await mainService.getById(currPlaceId)\r\n    setCurrPlace(currPlace)\r\n    setactiveMarker(marker)\r\n    setShowingInfoWindow(true)\r\n  }\r\n\r\n  function getEmptyState() {\r\n    setShowingInfoWindow(false)\r\n    setactiveMarker(null)\r\n    setCurrPlace(null)\r\n    setisEditTitle(false)\r\n\r\n  }\r\n  function onInfoWindowClose() {\r\n    getEmptyState()\r\n  }\r\n  const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n  async function onDeletePlace() {\r\n    const placeToDeleteId = currPlace._id\r\n    const currPlaceTitle = currPlace.title || 'Unknown place'\r\n    try {\r\n      getEmptyState()\r\n       dispatch(removePlace(placeToDeleteId))\r\n       dispatch(loadPlaces)\r\n       dispatch(setNotification('success', `Successfully deleted \"${currPlaceTitle}\"`,!!isExsictingNotification))\r\n    } catch {\r\n       dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n    }\r\n  }\r\n\r\n\r\n  function toggleChangePlaceTitle(isNewTitle = false) {\r\n    if (isNewTitle) dispatch(savePlace(currPlace))\r\n    setisEditTitle(!isEditTitle)\r\n  }\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n  }\r\n  const style = {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n  const infoWindowClass = isEditTitle ? 'edit-title flex' : 'info-window'\r\n  return (\r\n    <div className=\"map-wraper\">\r\n      <Map style={style} containerStyle={containerStyle}\r\n        google={props.google} zoom={zoom}\r\n        onClick={onMapClick}\r\n        initialCenter={initialCenter}\r\n        center={center}>\r\n        {places.map((place, idx) => {\r\n          return <Marker key={place._id} onClick={(props, marker, clickEvent) => onMarkerClick(props, marker, clickEvent, place._id)}\r\n            position={place.position} />\r\n\r\n        })}\r\n        {activeMarker && <InfoWindowEx visible={showingInfoWindow} marker={activeMarker} onClose={onInfoWindowClose}>\r\n          <div lcass=\"info-window\" className={infoWindowClass}>\r\n            {!isEditTitle ?\r\n              <React.Fragment><h2>{currPlace.title || 'No title yet'}</h2>\r\n                <div className=\"btns-container\">\r\n                  <button onClick={toggleChangePlaceTitle}>Change title</button>\r\n                  <button onClick={() => onDeletePlace(activeMarker._id)}>Delete</button>\r\n                </div>\r\n              </React.Fragment>\r\n              :\r\n              <form className=\"column-layout\" onSubmit={() => toggleChangePlaceTitle(true)}>\r\n                <input autoFocus\r\n                  ref={elTitleInput} placeholder=\"Enter place name\" name=\"title\" value={currPlace.title} onChange={handleInput} />\r\n                <button >Save new title</button>\r\n              </form>}\r\n\r\n          </div>\r\n        </InfoWindowEx>}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\nexport default (GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_GoogleMap))\r\n\r\n\r\n","import axios from 'axios'\r\n// const KEY = 'AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw'\r\n// const KEY = 'AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw'\r\nconst KEY = 'AIzaSyARhJCj-KdXS-t0qh0QBlZLvhzJlyQ36EQ'\r\nconst ZOMATO_KEY = 'bc3d0486cb424fdd3a6d5039b6b723d3'\r\n// const STROAGE_KEY = 'vids'\r\n\r\nexport const googleResturantsService = {\r\n    getResturantsFromGoogle\r\n}\r\n async function getResturantsFromGoogle(lat,lang) {\r\n    try{\r\n    // const resturants = await axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lang}&radius=1500&type=restaurant&key=${KEY}`)\r\n    const resturants = await axios.get(`https://api.chucknorris.io/jokes/random`)\r\n    // const resturants = await axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=32.109333,34.855499&radius=1500&type=restaurant&key=AIzaSyARhJCj-KdXS-t0qh0QBlZLvhzJlyQ36EQ`)\r\n    console.log('got videos from api: , ',resturants)\r\n    // storageService.saveToStorage(STROAGE_KEY,videos.data)\r\n\r\n    // return videos.data.items\r\n    }\r\n    catch(err){\r\n        if (err.response) {\r\n            // Request made and server responded\r\n            console.log(err.response.data);\r\n            console.log(err.response.status);\r\n            console.log(err.response.headers);\r\n          } else if (err.request) {\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            console.log(err);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n          }\r\n          }\r\n}","import React from 'react';\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setInitialCenter,removePlace,loadPlaces} from '../actions/placeActions.js';\r\nimport { setNotification} from '../actions/notificationActions'\r\nimport {googleResturantsService} from '../services/googleResturantsService'\r\n\r\nexport function _PlaceDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const {  place, toggleIsEdit,onCloseModal } = props\r\n    const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n     function onSetInitialCenter() {\r\n        try {\r\n             dispatch(setInitialCenter(place.position))\r\n\r\n             dispatch(setNotification('success', `successfully saved \"${place.title || 'Unknown place '}\" as initial center`,!!isExsictingNotification))\r\n        }\r\n        catch {\r\n             dispatch(setNotification('err', `OOPS! something went wrong, could'nt save current place as initial center`))\r\n        }\r\n    }\r\n     function onDeletePlace() {\r\n        const currPlaceTitle = place.title || 'Unknown place'\r\n        try {\r\n             onCloseModal()\r\n             dispatch(removePlace(place._id))\r\n             dispatch(loadPlaces())\r\n             dispatch(setNotification('success', `Successfully deleted \"${currPlaceTitle}\"` ,!!isExsictingNotification))\r\n            }\r\n        catch {\r\n            dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n        }\r\n    }\r\n    function onShowResturants(){\r\n        const {lat,lng} = place.position\r\n        // googleResturantsService.getResturantsFromGoogle()\r\n        googleResturantsService.getResturantsFromGoogle(lat,lng)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"place-details-container\">\r\n                <h1>{place.title || 'No title yet'}</h1>\r\n                <div className=\"map-wraper-modal\">\r\n                    <Map\r\n                        google={props.google} zoom={7}\r\n                        initialCenter={place.position}>\r\n                        <Marker\r\n                            position={place.position}\r\n                            name={'Current location'} />\r\n                    </Map>\r\n                </div>\r\n                <div className=\"place-details\">\r\n                    <h3><span>Latitude: </span>{place.position.lat}</h3>\r\n                    <h3><span>Langtitude: </span>{place.position.lng}</h3>\r\n                    <h3>Description:</h3>\r\n                    <p>{place.description || 'No description yet'}</p>\r\n                </div>\r\n                <div className=\"action-btns flex space-between\">\r\n                    <button onClick={toggleIsEdit}>Edit </button>\r\n                    <button onClick={onSetInitialCenter}>Set as initial center </button>\r\n                    <button onClick={onDeletePlace}>Delete </button>\r\n                    <button onClick={onShowResturants}>Resturants </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport const PlaceDetails = (GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_PlaceDetails))\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n        },\r\n    ];\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\n\r\n\r\nexport function EditPlace(props) {\r\n    const { toggleIsEdit, place } = props\r\n    const [placeToEdit, handleChange] = useForm({ ...place })\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={(event) => toggleIsEdit(event, placeToEdit)} className=\"place-edit-form \">\r\n                    <label htmlFor=\"title\">Title: </label>\r\n                    <input name=\"title\" type=\"text\" value={placeToEdit.title} onChange={handleChange} />\r\n                <label htmlFor=\"Description\">Description: </label>\r\n                <textarea name=\"description\" id=\"\" cols=\"30\" rows=\"10\" value={placeToEdit.description} onChange={handleChange}></textarea>\r\n                <button >Edit </button>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { PlaceDetails } from '../cmps/PlaceDetails'\r\nimport { EditPlace } from '../cmps/EditPlace'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { loadPlaces,savePlace,selectPlace } from '../actions/placeActions.js';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nexport function PlaceModal(props) {\r\n    const place = useSelector(state => state.placeReducer.selectedPlace);\r\n    const dispatch = useDispatch()\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    \r\n    async function toggleEdit(ev, editedPlace = null) {\r\n        if (editedPlace) {\r\n            ev.preventDefault()\r\n            dispatch(savePlace(editedPlace))\r\n            dispatch(selectPlace(editedPlace._id))\r\n            dispatch(loadPlaces())\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        dispatch(selectPlace(null))\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            overflow: 'scroll',\r\n            cursor: 'pointer'\r\n        },\r\n        paper: {\r\n            cursor: 'auto',\r\n            position: 'absolute',\r\n            maxWidth: 400,\r\n            minHeight: 500,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            left: 0,\r\n            right: 0,\r\n            top: '40px',\r\n            margin: '0 auto',\r\n            [theme.breakpoints.down('xs')]: {\r\n                maxWidth: 300,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!place) return <div>Loading...</div>\r\n    return (\r\n        <Modal\r\n            open={!!place}\r\n            onClose={onCloseModal}\r\n            className={classes.modal}>\r\n            <section className={`${classes.paper} column-layout`}>\r\n                <button className=\"close-btn align-self-start\" onClick={onCloseModal}></button>\r\n                {isEdit ? <EditPlace toggleIsEdit={toggleEdit} classes={classes} place={place} /> :\r\n                    <PlaceDetails onCloseModal={onCloseModal} toggleIsEdit={(event) => toggleEdit(event)} classes={classes}  place={place} />}\r\n            </section>\r\n\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {mainService} from '../services/mainService'\r\nimport { PlaceModal } from '../cmps/PlaceModal'\r\nimport { selectPlace,reOrganizePlaces } from '../actions/placeActions.js';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport function TableCmp(props) {\r\n    const dispatch = useDispatch()\r\n    const { filterBy, selectedPlace, places } = useSelector(state => state.placeReducer)\r\n    let [placesToShow, setPlacesToShow] = useState([])\r\n    useEffect(() => {\r\n        getPlacesToShow(filterBy)\r\n    }, [places, filterBy])\r\n\r\n    async function getPlacesToShow(filterBy) {\r\n        if (filterBy && filterBy.title) {\r\n            const { title } = filterBy\r\n            setPlacesToShow(placesToShow = places.filter(place => place.title.toLowerCase().includes(title.toLowerCase())))\r\n        } else {\r\n            setPlacesToShow(placesToShow = places)\r\n        }\r\n    }\r\n\r\n    function onSelectPlace(placeId = '') {\r\n        dispatch(selectPlace(placeId))\r\n    }\r\n\r\n    const windowSize = useMediaQuery('(max-width:600px)');\r\n    function getLat(place) {\r\n        if (!windowSize) return place.position.lat\r\n        else return place.position.lat.toFixed(2) + '...'\r\n    }\r\n    function getLng(place) {\r\n        if (!windowSize) return place.position.lng\r\n        else return place.position.lng.toFixed(2) + '...'\r\n    }\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: '#01c5c4',\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: 10,\r\n                fontSize: 12\r\n            },\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n    const useStyles = makeStyles((theme) => ({\r\n        table: {\r\n            width: '100%',\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    \r\n    function handleDragEnd(res){\r\n        if(!res.destination) return\r\n        const places = Array.from(placesToShow)\r\n        const [recordedPlace] = places.splice(res.source.index,1)\r\n        places.splice(res.destination.index,0,recordedPlace)\r\n        // setPlacesToShow(places)\r\n        try{\r\n            dispatch(reOrganizePlaces(places))\r\n            mainService.saveReorgenizedPlaces(places)\r\n        }\r\n        catch{\r\n            console.log('basa')\r\n        }\r\n\r\n\r\n    }\r\n    if (!placesToShow.length) return <h1>No matching results</h1>\r\n    else return (\r\n        <React.Fragment>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Name </StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lang</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lat</StyledTableCell>\r\n                            <StyledTableCell align=\"left\"></StyledTableCell>\r\n                        </TableRow>\r\n\r\n                    </TableHead>\r\n                    <DragDropContext onDragEnd={handleDragEnd}>\r\n                        <Droppable droppableId=\"Place\">\r\n                            {(provided) => (\r\n                                <TableBody {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {placesToShow.map((place,idx) => (\r\n                                        <Draggable key={place._id} draggableId={place._id} index={idx}>\r\n                                            {(provided) =>(\r\n                                                \r\n                                            \r\n                                            <StyledTableRow key={place._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                                    {place.title || 'No title yet'}\r\n                                                </StyledTableCell>\r\n                                                <StyledTableCell align=\"left\">{getLat(place)}</StyledTableCell>\r\n                                                <StyledTableCell align=\"left\">{getLng(place)}</StyledTableCell>\r\n                                                <StyledTableCell align=\"left\" className=\"description-slot column-layout\">\r\n\r\n                                                    <button onClick={() => onSelectPlace(place._id)}>Show more</button>\r\n                                                </StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </TableBody>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </Table>\r\n            </TableContainer>\r\n            {selectedPlace && <PlaceModal closeModal={onSelectPlace} place={selectedPlace} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport { setCenter } from '../actions/placeActions'\r\n\r\nexport function CurrLocationBtn(props) {\r\n    const dispatch = useDispatch()\r\n    function onSetCurrLocation() {\r\n\r\n        function setCurrLocation(pos) {\r\n            const position = {\r\n                lat: pos.coords.latitude,\r\n                lng: pos.coords.longitude\r\n            }\r\n            dispatch(setCenter(position))\r\n        }\r\n        function error(err) {\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n            dispatch(setNotification('err', `OOPS! Could'nt get your current location`))\r\n        }\r\n        navigator.geolocation.getCurrentPosition(setCurrLocation, error);\r\n    }\r\n    return (\r\n        <button onClick={onSetCurrLocation} className=\"align-self-start\">Set your location!</button>\r\n    );\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\nimport { useDispatch,  } from 'react-redux'\r\nimport { setFilter } from '../actions/placeActions.js';\r\n\r\nexport function Filter() {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [filterBy, handleChange] = useForm({ title: ''},onFilter)\r\n    const { title } = filterBy\r\n                function onFilter() {\r\n                    if(filterBy === undefined) return\r\n                    dispatch(setFilter(filterBy))\r\n                }\r\n        return (\r\n            <div className=\"places-filter-container\">\r\n                <input autoComplete=\"off\" name=\"title\" type=\"text\" value={title} onChange={handleChange} placeholder=\"Search for a place\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n","import React from 'react';\r\nimport GoogleMap from '../cmps/GoogleMap'\r\nimport { TableCmp } from '../cmps/TableCmp'\r\nimport {CurrLocationBtn} from '../cmps/CurrLocationBtn'\r\nimport {Filter} from '../cmps/Filter'\r\n\r\nexport function MainApp(props){\r\n\r\n    return (\r\n\r\n      <section className=\"main-app-container  column-layout\" >\r\n        <section className=\"column-layout\">\r\n          <h1>Map Markers</h1>\r\n          <CurrLocationBtn />\r\n          <GoogleMap />\r\n        </section>\r\n        <section className=\"table-cmp-container\">\r\n          <Filter/>\r\n          <TableCmp />\r\n        </section>\r\n      </section>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { fadeInDown, fadeOutUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { clearNotification } from '../actions/notificationActions.js'\r\n// import ClearIcon from '@material-ui/icons/Clear';\r\n// import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n// import CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\r\n\r\nexport function Notification(props) {\r\n    const dispatch = useDispatch()\r\n    let notificationLifeCycle = null\r\n\r\n\r\n    useEffect(() => {\r\n        notificationLifeCycle = setTimeout(() => {\r\n            dispatch(clearNotification())\r\n        }, 4000)\r\n        return () =>{\r\n            clearTimeout(notificationLifeCycle)\r\n        }\r\n    })\r\n    const { kind, txt } = useSelector(state => state.notificationReducer);\r\n    const notificationBox = useRef(null)\r\n\r\n    const styles = {\r\n        fadeInDown: {\r\n            animation: 'x 0.5s',\r\n            animationName: Radium.keyframes(fadeInDown, 'fadeInDown')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <StyleRoot>\r\n            <div ref={notificationBox} style={styles.fadeInDown} className={`notification-box ${kind}`}>\r\n                <p>\r\n                    {txt}\r\n                </p>\r\n            </div>\r\n        </StyleRoot >\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { About } from './pages/About';\nimport { Navbar } from './cmps/Navbar';\nimport { Footer } from './cmps/Footer';\nimport { MainApp } from './pages/MainApp'\nimport {Notification} from './cmps/Notification'\nimport {  useSelector } from 'react-redux'\n\n\n\nfunction App() {\n  const currNotification = useSelector(state => state.notificationReducer.txt);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <main>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={MainApp} />\n        </Switch>\n        </main>\n        <Footer/>\n      </Router>\n        {currNotification &&<Notification/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import {initialCenterService} from '../services/InitialCenterService'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    filterBy: null,\r\n    selectedPlace:null,\r\n    initialCenter:initialCenterService.loadInitialCenter() ||{\r\n        lat: 40.854885,\r\n        lng: -88.081807\r\n      },\r\n    center:null,\r\n    // isUserGeolocation:null\r\n}\r\n\r\nexport function placeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PLACES':\r\n            return {\r\n                ...state,\r\n                places: action.places\r\n            }\r\n        case 'SET_INITIAL_CENTER':\r\n            return {\r\n                ...state,\r\n                initialCenter: action.position\r\n            }\r\n        case 'SET_CENTER':\r\n            return {\r\n                ...state,\r\n                center: action.position,\r\n                // isUserGeolocation:action.isUserGeolocation\r\n            }\r\n            case 'SELECT_PLACE':\r\n                return {\r\n                    ...state,\r\n                    selectedPlace: action.selectedPlace\r\n                }\r\n            case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filterBy\r\n            }\r\n        case 'ADD_PLACE':\r\n            return {\r\n                ...state,\r\n                places: [...state.places, action.place]\r\n            }\r\n        case 'UPDATE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.map(place => {\r\n                    if (place._id === action.place._id) return action.place;\r\n                    return place;\r\n                })\r\n            }\r\n        case 'REMOVE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.filter(place => place._id !== action.placeId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    txt: '',\r\n    kind: ''\r\n}\r\n\r\nexport function notificationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: action.txt,\r\n                kind: action.kind\r\n            }\r\n        case 'CLEAR_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: '',\r\n                kind:''\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer'\r\nimport systemReducer from './systemReducer';\r\nimport { placeReducer } from './placeReducer';\r\nimport { notificationReducer } from './notificationReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  placeReducer: placeReducer,\r\n  notificationReducer:notificationReducer,\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}