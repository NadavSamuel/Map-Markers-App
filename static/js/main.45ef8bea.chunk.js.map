{"version":3,"sources":["assets/imgs/profile.jpg","pages/About.jsx","cmps/BlackScreen.jsx","cmps/Navbar.jsx","cmps/Footer.jsx","services/storageService.js","services/mainService.js","services/InitialCenterService.js","actions/placeActions.js","actions/notificationActions.js","cmps/InfoWindowEx.jsx","reducers/systemReducer.js","cmps/GoogleMap.jsx","actions/systemActions.js","services/googleResturantsService.js","cmps/PlaceDetails.jsx","services/customHooks.js","cmps/EditPlace.jsx","cmps/PlaceModal.jsx","cmps/TableCmp.jsx","cmps/CurrLocationBtn.jsx","cmps/Filter.jsx","pages/MainApp.jsx","cmps/Notification.jsx","cmps/ResturantCard.jsx","cmps/ResturantList.jsx","pages/PlaceResturants.jsx","App.jsx","serviceWorker.js","reducers/userReducer.js","reducers/placeReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js","assets/imgs/logo.png"],"names":["module","exports","About","useEffect","window","scrollTo","className","src","require","alt","BlackScreen","closeMenu","onClick","Navbar","useState","isMenuShown","setIsMenuShown","isHideMenu","navbarLayout","useMediaQuery","to","Footer","href","LinkedinShareButton","url","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","mainService","query","filterBy","placesToReturn","gPlaces","title","filter","place","toLowerCase","includes","Promise","resolve","save","placeToSave","_id","idx","findIndex","item","splice","makeId","push","remove","id","getById","find","saveReorgenizedPlaces","movedPlaceIdx","destinationIdx","recordedPlace","defaultItems","position","lat","lng","description","items","length","_loadPlaces","text","possible","i","charAt","Math","floor","random","initialCenterService","saveInitialCenter","loadInitialCenter","_removePlace","placeId","type","_setPlaces","places","_selectPlace","selectedPlace","selectPlace","dispatch","a","async","loadPlaces","removePlace","savePlace","getState","savedPlace","setNotification","kind","txt","isAliveNotification","setTimeout","InfoWindowEx","props","infoWindowRef","React","createRef","contentElement","document","createElement","ReactDOM","render","Children","only","children","current","infowindow","setContent","ref","initialState","isLoading","GoogleApiWrapper","apiKey","useDispatch","zoom","setZoom","activeMarker","setactiveMarker","showingInfoWindow","setShowingInfoWindow","currPlace","setCurrPlace","isEditTitle","setisEditTitle","useSelector","state","placeReducer","initialCenter","center","systemReducer","elTitleInput","getEmptyState","isExsictingNotification","notificationReducer","toggleChangePlaceTitle","isNewTitle","infoWindowClass","style","width","height","containerStyle","google","mapProps","map","clickEvent","newPlace","latLng","marker","currPlaceId","onMarkerClick","visible","onClose","lcass","onSubmit","autoFocus","placeholder","name","value","onChange","ev","target","focus","Fragment","placeToDeleteId","currPlaceTitle","onDeletePlace","KEY","googleResturantsService","getResturantsFromGoogle","lang","nextPageToken","proxyUrl","loadMoreUrl","axios","get","resturants","data","response","console","log","status","headers","request","message","PlaceDetails","toggleIsEdit","onCloseModal","_setInitialCenter","useForm","cb","fields","setFields","event","EditPlace","placeToEdit","handleChange","htmlFor","cols","rows","PlaceModal","isEdit","setIsEdit","toggleEdit","editedPlace","preventDefault","classes","makeStyles","theme","modal","overflow","cursor","paper","maxWidth","minHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","right","top","margin","breakpoints","down","useStyles","Modal","open","TableCmp","placesToShow","setPlacesToShow","onSelectPlace","getPlacesToShow","windowSize","StyledTableCell","withStyles","head","color","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","table","TableContainer","component","Paper","Table","aria-label","TableHead","align","onDragEnd","res","destination","currPlaces","Array","from","source","index","reOrganisedPlaces","reOrgenizePlaces","droppableId","provided","TableBody","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","scope","toFixed","getLat","getLng","closeModal","CurrLocationBtn","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","_setCenter","setCenter","err","warn","code","Filter","undefined","_setFilter","setFilter","autoComplete","MainApp","GoogleMap","Notification","notificationLifeCycle","clearTimeout","notificationBox","useRef","styles","fadeInDown","animation","animationName","Radium","keyframes","ResturantCard","resturant","vicinity","photos","permanently_closed","geometry","photoReference","photo_reference","imgUrl","img","onError","newMapMarker","location","ResturantList","place_id","PlaceResturants","setPlace","apiData","setApiData","setResturants","useParams","getNearbyResturants","isLoadMore","currPagePosition","pageYOffset","newApiData","next_page_token","concat","results","getPlace","App","currNotification","isLoader","path","Boolean","hostname","match","localLoggedinUser","sessionStorage","user","loggedInUser","users","rootReducer","combineReducers","userId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45ef8bea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.36e27b4d.jpg\";","import React, { useEffect } from 'react'\r\n\r\nexport function About() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  })\r\n  return (\r\n    <section className=\"about-container flex column align-center\">\r\n      <div className=\"profile-img-container flex justify-center\">\r\n        <img src={require('../assets/imgs/profile.jpg')} alt=\"\" />\r\n      </div>\r\n      <div className=\"personal-txt-container\">\r\n        <h1>Hi! my name is Nadav Samuel and i'm a <span>Full-Stack</span> developer!</h1>\r\n        <p> I'm 22 years old, born in Givaataim, Israel. \r\n        Motivational fullstack web developer. People person and a team player.\r\n        <br/>\r\n        <br/>\r\n        <span>samuelna9@gmail.com </span>\r\n\r\n</p>\r\n      </div>\r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport function BlackScreen({ closeMenu }) {\r\n\r\n    return (\r\n        <div onClick={() => closeMenu()} className= \"black-screen\"></div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BlackScreen } from './BlackScreen';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport function Navbar() {\r\n    const [isMenuShown, setIsMenuShown] = useState(false)\r\n    const windowSize = useMediaQuery('(min-width:700px)');\r\n    function closeMenu() {\r\n        setIsMenuShown(false)\r\n    }\r\n    const isHideMenu = (isMenuShown ? '' : 'hide');\r\n    const navbarLayout = (!windowSize ? 'column-layout mobile-links' : '');\r\n    return (\r\n        <header className=\"navbar flex align-center space-between  fill\">\r\n            <div className=\"navbar-container flex space-between full-width align-center\">\r\n                <Link to=\"/\" className=\"flex align-center  space-between\"><img className='logo' src={require('../assets/imgs/logo.png')} alt=\"\" /></Link>\r\n                <MenuIcon onClick={() => setIsMenuShown(true)} className='phone-view ' ></MenuIcon>\r\n                <div className={`main-nav-container flex space-between full-width align-center justify-end ${isHideMenu}`}>\r\n                    <ul className={`clean-list flex  full-view clean-link-list ${navbarLayout}`} >\r\n                        <Link to=\"/about\" onClick={closeMenu}><li>About</li></Link>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {isMenuShown && <BlackScreen closeMenu={closeMenu} />}\r\n\r\n        </header>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {LinkedinShareButton} from \"react-share\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport function Footer() {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <footer className='flex justify-between align-center '>\r\n            <section className=\"footer-content-container flex full-width space-between\">\r\n            <div className=\"social-btns-container flex\">\r\n                  <a href={'https://github.com/NadavSamuel'} className=\"cursor-pointer\"><span> <GitHubIcon /></span></a> \r\n                <LinkedinShareButton url='https://www.linkedin.com/in/nadav-samuel-0b51291b9/'>\r\n                <span> <LinkedInIcon /></span>\r\n                </LinkedinShareButton>\r\n            </div>\r\n            <p className='flex align-center'><CopyrightIcon /> <span> Nadav Samuel 2020 </span>  </p>\r\n            </section>\r\n        </footer>\r\n\r\n    )\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from './storageService.js'\r\n\r\nexport const mainService = {\r\n    query,\r\n    save,\r\n    remove,\r\n    getById,\r\n    makeId,\r\n    saveReorgenizedPlaces\r\n}\r\n\r\nvar defaultItems = [\r\n    { position: { lat: 37.7873304289299, lng: -122.43072017185777 }, title: 'Some place', _id: \"5PLfm\", description: 'Ahlan wa sahalan' },\r\n    { position: { lat: 32.7873304289299, lng: -112.43072017185777 }, title: 'Some other place', _id: \"43fag\", description: 'Ahlan wa sahalan ya gever' },\r\n]\r\n\r\nconst STORAGE_KEY = 'places'\r\nconst gPlaces = _loadPlaces()\r\n\r\nfunction query(filterBy) {\r\n    let placesToReturn = gPlaces;\r\n    if (filterBy) {\r\n        var { title } = filterBy\r\n        placesToReturn = gPlaces.filter(place => place.title.toLowerCase().includes(title.toLowerCase()))\r\n    }\r\n    return Promise.resolve([...placesToReturn]);\r\n}\r\n\r\nfunction getById(id) {\r\n    const place = gPlaces.find(place => place._id === id)\r\n    return Promise.resolve(place)\r\n}\r\n\r\nfunction remove(id) {\r\n    const idx = gPlaces.findIndex(place => place._id === id)\r\n    gPlaces.splice(idx, 1)\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction save(placeToSave) {\r\n    if (placeToSave._id) {\r\n        const idx = gPlaces.findIndex(item => item._id === placeToSave._id)\r\n        gPlaces.splice(idx, 1, placeToSave)\r\n    } else {\r\n        placeToSave._id = makeId()\r\n        gPlaces.push(placeToSave)\r\n    }\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return Promise.resolve(placeToSave);\r\n}\r\nfunction saveReorgenizedPlaces(movedPlaceIdx, destinationIdx) {\r\n    let placesToReturn = gPlaces\r\n    const [recordedPlace] = placesToReturn.splice(movedPlaceIdx, 1);\r\n    placesToReturn.splice(destinationIdx, 0, recordedPlace);\r\n    storageService.saveToStorage(STORAGE_KEY, gPlaces)\r\n    return placesToReturn\r\n\r\n}\r\n\r\nfunction _loadPlaces() {\r\n    let items = storageService.loadFromStorage(STORAGE_KEY)\r\n    if (!items || !items.length) items = defaultItems\r\n    storageService.saveToStorage(STORAGE_KEY, items)\r\n    return items\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { storageService } from './storageService.js'\r\n\r\nexport const initialCenterService  =  {\r\n    saveInitialCenter,\r\n    loadInitialCenter\r\n}\r\n\r\nconst STORAGE_KEY = 'initial-center'\r\n\r\nfunction saveInitialCenter(position){\r\n    storageService.saveToStorage(STORAGE_KEY,position)\r\n}\r\nfunction loadInitialCenter(){\r\n    return storageService.loadFromStorage(STORAGE_KEY)\r\n}\r\n","import { mainService } from '../services/mainService';\r\nimport {initialCenterService} from '../services/InitialCenterService'\r\n// Dispatchers\r\nconst _removePlace = (placeId) => ({ type: 'REMOVE_PLACE', placeId });\r\nconst _setPlaces = (places) => ({ type: 'SET_PLACES', places });\r\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\r\nconst _selectPlace = (selectedPlace) => ({ type: 'SELECT_PLACE', selectedPlace });\r\nconst _setInitialCenter = (position) => ({ type: 'SET_INITIAL_CENTER', initialCenter:position });\r\nconst _setCenter = (position) => ({ type: 'SET_CENTER', position });\r\n\r\n// THUNK\r\nexport function selectPlace(placeId) {\r\n    return async (dispatch) => {\r\n        const selectedPlace = await mainService.getById(placeId);\r\n        dispatch(_selectPlace(selectedPlace));\r\n    }\r\n}\r\nexport function setInitialCenter(position) {\r\n    initialCenterService.saveInitialCenter(position)\r\n    return (dispatch) => dispatch(_setInitialCenter(position))\r\n}\r\nexport function setCenter(position) {\r\n    return (dispatch) => dispatch(_setCenter(position))\r\n}\r\n// export function loadPlace(placeId) {\r\n//     return async (dispatch) => {\r\n//         const placeToLoad = await mainService.getById(placeId);\r\n//         dispatch(_loadPlace(placeToLoad));\r\n//     }\r\n// }\r\nexport function loadPlaces(filterBy) {\r\n    return async (dispatch) => {\r\n        const places = await mainService.query(filterBy);\r\n        dispatch(_setPlaces(places));\r\n    }\r\n}\r\nexport function reOrganizePlaces(places) {\r\n    return async (dispatch) => {\r\n        dispatch(_setPlaces(places));\r\n    }\r\n}\r\nexport function removePlace(placeId) {\r\n    return async (dispatch) => {\r\n        mainService.remove(placeId)\r\n        dispatch(_removePlace(placeId))\r\n    }\r\n}\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => dispatch(_setFilter(filterBy))\r\n}\r\n\r\nexport  function savePlace(place) {\r\n    return async (dispatch,getState) => {\r\n        const type = place._id ? 'UPDATE_PLACE' : 'ADD_PLACE';\r\n        const savedPlace = await mainService.save(place)\r\n        dispatch({ type, place: savedPlace })  \r\n    }\r\n}\r\nexport  function reOrgenizePlaces(movedPlaceIdx,destinationIdx) {\r\n    return async (dispatch) => {\r\n        const reOrganisedPlaces = await mainService.saveReorgenizedPlaces(movedPlaceIdx,destinationIdx)\r\n        dispatch(_setPlaces(reOrganisedPlaces));\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport function setNotification(kind, txt, isAliveNotification = false) {\r\n    if (isAliveNotification) {\r\n        return dispatch => {\r\n            dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n            setTimeout(() =>{\r\n                dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n            },10)\r\n        }\r\n    }\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_NOTIFICATION', kind, txt })\r\n    }\r\n}\r\n\r\nexport function clearNotification() {\r\n    return dispatch => {\r\n        dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport default function InfoWindowEx(props) {\r\n  const infoWindowRef = React.createRef();\r\n  const contentElement = document.createElement(`div`);\r\n  useEffect(() => {\r\n    ReactDOM.render(React.Children.only(props.children), contentElement);\r\n    infoWindowRef.current.infowindow.setContent(contentElement);\r\n  }, [props.children]);\r\n  return <InfoWindow ref={infoWindowRef} {...props} />;\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mainService } from '../services/mainService'\r\nimport {  loadPlaces, savePlace, removePlace } from '../actions/placeActions.js';\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport InfoWindowEx from '../cmps/InfoWindowEx'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport {setLoader} from '../actions/systemActions'\r\n\r\nfunction _GoogleMap(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [zoom, setZoom] = useState(7)\r\n  const [activeMarker, setactiveMarker] = useState(null)\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false)\r\n  const [currPlace, setCurrPlace] = useState(null)\r\n  const [isEditTitle, setisEditTitle] = useState(false)\r\n\r\n  const { places, initialCenter, center } = useSelector(state => state.placeReducer);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setLoader())\r\n\r\n    dispatch(loadPlaces())\r\n    if (center) onSetZoom()\r\n    dispatch(setLoader())\r\n\r\n  }, [center])\r\n\r\n  function onSetZoom() {\r\n    setZoom(15)\r\n    setTimeout(() => {\r\n      setZoom(null)\r\n    }, 10)\r\n\r\n  }\r\n  function handleInput(ev) {\r\n    const { name, value } = ev.target;\r\n    setCurrPlace({ ...currPlace, [name]: value })\r\n    elTitleInput.current.focus()\r\n  };\r\n  const elTitleInput = React.createRef()\r\n\r\n  async function onMapClick(mapProps, map, clickEvent) {\r\n    const newPlace = {\r\n      position: {\r\n        lat: clickEvent.latLng.lat(),\r\n        lng: clickEvent.latLng.lng(),\r\n      },\r\n      title: '',\r\n      description: ''\r\n    }\r\n    dispatch(savePlace(newPlace))\r\n    dispatch(loadPlaces())\r\n  }\r\n  async function onMarkerClick(props, marker, clickEvent, currPlaceId) {\r\n    const currPlace = await mainService.getById(currPlaceId)\r\n    setCurrPlace(currPlace)\r\n    setactiveMarker(marker)\r\n    setShowingInfoWindow(true)\r\n  }\r\n\r\n  function getEmptyState() {\r\n    setShowingInfoWindow(false)\r\n    setactiveMarker(null)\r\n    setCurrPlace(null)\r\n    setisEditTitle(false)\r\n\r\n  }\r\n  function onInfoWindowClose() {\r\n    getEmptyState()\r\n  }\r\n  const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n  async function onDeletePlace() {\r\n    const placeToDeleteId = currPlace._id\r\n    const currPlaceTitle = currPlace.title || 'Unknown place'\r\n    try {\r\n      getEmptyState()\r\n       dispatch(removePlace(placeToDeleteId))\r\n       dispatch(loadPlaces)\r\n       dispatch(setNotification('success', `Successfully deleted \"${currPlaceTitle}\"`,!!isExsictingNotification))\r\n    } catch {\r\n       dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n    }\r\n  }\r\n\r\n\r\n  function toggleChangePlaceTitle(isNewTitle = false) {\r\n    if (isNewTitle) dispatch(savePlace(currPlace))\r\n    setisEditTitle(!isEditTitle)\r\n  }\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n  }\r\n  const style = {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n  const infoWindowClass = isEditTitle ? 'edit-title flex' : 'info-window'\r\n  return (\r\n    <div className=\"map-wraper\">\r\n      <Map style={style} containerStyle={containerStyle}\r\n        google={props.google} zoom={zoom}\r\n        onClick={onMapClick}\r\n        initialCenter={initialCenter}\r\n        center={center}>\r\n        {places.map((place, idx) => {\r\n          return <Marker key={place._id} onClick={(props, marker, clickEvent) => onMarkerClick(props, marker, clickEvent, place._id)}\r\n            position={place.position} />\r\n\r\n        })}\r\n        {activeMarker && <InfoWindowEx visible={showingInfoWindow} marker={activeMarker} onClose={onInfoWindowClose}>\r\n          <div lcass=\"info-window\" className={infoWindowClass}>\r\n            {!isEditTitle ?\r\n              <React.Fragment><h2>{currPlace.title || 'No title yet'}</h2>\r\n                <div className=\"btns-container\">\r\n                  <button onClick={toggleChangePlaceTitle}>Change title</button>\r\n                  <button onClick={() => onDeletePlace(activeMarker._id)}>Delete</button>\r\n                </div>\r\n              </React.Fragment>\r\n              :\r\n              <form className=\"column-layout\" onSubmit={() => toggleChangePlaceTitle(true)}>\r\n                <input autoFocus\r\n                  ref={elTitleInput} placeholder=\"Enter place name\" name=\"title\" value={currPlace.title} onChange={handleInput} />\r\n                <button >Save new title</button>\r\n              </form>}\r\n\r\n          </div>\r\n        </InfoWindowEx>}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\nexport default (GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_GoogleMap))\r\n\r\n\r\n","import { Store } from \"@material-ui/icons\";\r\nimport systemReducer from \"../reducers/systemReducer\";\r\n\r\nexport const _loading = () =>  ({ type: 'LOADING_START' })\r\nexport const _doneLoading = () => ({ type: 'LOADING_DONE' })\r\n\r\nexport function setLoader() {\r\n    return  (dispatch,getState) => {\r\n        const {isLoading} = getState().systemReducer\r\n        !isLoading ? dispatch(_loading()) : dispatch(_doneLoading()) \r\n    }\r\n}\r\n\r\n","import axios from 'axios'\r\nimport {storageService} from '../services/storageService'\r\nconst KEY = 'AIzaSyARhJCj-KdXS-t0qh0QBlZLvhzJlyQ36EQ'\r\n\r\n\r\nexport const googleResturantsService = {\r\n  getResturantsFromGoogle\r\n}\r\nasync function getResturantsFromGoogle(lat, lang,nextPageToken = null) {\r\n  try {\r\n\r\n    const proxyUrl = `https://cors-anywhere.herokuapp.com/`;\r\n    const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lang}&maxResults=10&radius=1500&type=restaurant&key=${KEY}`; \r\n    const loadMoreUrl = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lang}&maxResults=10&radius=1500&type=restaurant&key=${KEY}&pagetoken=${nextPageToken}`;\r\n    \r\n    const resturants = !nextPageToken? await axios.get(proxyUrl + url): await axios.get(proxyUrl + loadMoreUrl)\r\n    storageService.saveToStorage('resturants',resturants.data)\r\n\r\n    return resturants.data\r\n  }\r\n  catch (err) {\r\n    if (err.response) {\r\n      // Request made and server responded\r\n      console.log(err.response.data);\r\n      console.log(err.response.status);\r\n      console.log(err.response.headers);\r\n    } else if (err.request) {\r\n      // The request was made but no response was received\r\n      console.log(err.request);\r\n      console.log(err);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', err.message);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setInitialCenter,removePlace,loadPlaces} from '../actions/placeActions.js';\r\nimport { setNotification} from '../actions/notificationActions'\r\nimport {googleResturantsService} from '../services/googleResturantsService'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function _PlaceDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const {  place, toggleIsEdit,onCloseModal } = props\r\n    const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n     function onSetInitialCenter() {\r\n        try {\r\n             dispatch(setInitialCenter(place.position))\r\n\r\n             dispatch(setNotification('success', `successfully saved \"${place.title || 'Unknown place '}\" as initial center`,!!isExsictingNotification))\r\n        }\r\n        catch {\r\n             dispatch(setNotification('err', `OOPS! something went wrong, could'nt save current place as initial center`))\r\n        }\r\n    }\r\n     function onDeletePlace() {\r\n        const currPlaceTitle = place.title || 'Unknown place'\r\n        try {\r\n             onCloseModal()\r\n             dispatch(removePlace(place._id))\r\n             dispatch(loadPlaces())\r\n             dispatch(setNotification('success', `Successfully deleted \"${currPlaceTitle}\"` ,!!isExsictingNotification))\r\n            }\r\n        catch {\r\n            dispatch(setNotification('err', `OOPS! something went wrong, could'nt delete ${currPlaceTitle}`))\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"place-details-container\">\r\n                <h1>{place.title || 'No title yet'}</h1>\r\n                <div className=\"map-wraper-modal\">\r\n                    <Map\r\n                        google={props.google} zoom={7}\r\n                        initialCenter={place.position}>\r\n                        <Marker\r\n                            position={place.position}\r\n                            name={'Current location'} />\r\n                    </Map>\r\n                </div>\r\n                <div className=\"place-details\">\r\n                    <h3><span>Latitude: </span>{place.position.lat}</h3>\r\n                    <h3><span>Langtitude: </span>{place.position.lng}</h3>\r\n                    <h3>Description:</h3>\r\n                    <p>{place.description || 'No description yet'}</p>\r\n                    <Link to={`/resturants/${place._id}`} >See resturants around!</Link>\r\n                    \r\n                </div>\r\n                <div className=\"action-btns flex space-between\">\r\n                    <button onClick={toggleIsEdit}>Edit </button>\r\n                    <button onClick={onSetInitialCenter}>Set as initial center </button>\r\n                    <button onClick={onDeletePlace}>Delete </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport const PlaceDetails = (GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDeLhksMwK4S5h3ZKNrYYPsPPedZuHxdlw')\r\n})(_PlaceDetails))\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n        },\r\n    ];\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\n\r\n\r\nexport function EditPlace(props) {\r\n    const { toggleIsEdit, place } = props\r\n    const [placeToEdit, handleChange] = useForm({ ...place })\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={(event) => toggleIsEdit(event, placeToEdit)} className=\"place-edit-form \">\r\n                    <label htmlFor=\"title\">Title: </label>\r\n                    <input name=\"title\" type=\"text\" value={placeToEdit.title} onChange={handleChange} />\r\n                <label htmlFor=\"Description\">Description: </label>\r\n                <textarea name=\"description\" id=\"\" cols=\"30\" rows=\"10\" value={placeToEdit.description} onChange={handleChange}></textarea>\r\n                <button >Save </button>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { PlaceDetails } from '../cmps/PlaceDetails'\r\nimport { EditPlace } from '../cmps/EditPlace'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { loadPlaces,savePlace,selectPlace } from '../actions/placeActions.js';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nexport function PlaceModal(props) {\r\n    const place = useSelector(state => state.placeReducer.selectedPlace);\r\n    const dispatch = useDispatch()\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    \r\n    async function toggleEdit(ev, editedPlace = null) {\r\n        if (editedPlace) {\r\n            ev.preventDefault()\r\n            dispatch(savePlace(editedPlace))\r\n            dispatch(selectPlace(editedPlace._id))\r\n            dispatch(loadPlaces())\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        dispatch(selectPlace(null))\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            overflow: 'scroll',\r\n            cursor: 'pointer'\r\n        },\r\n        paper: {\r\n            cursor: 'auto',\r\n            position: 'absolute',\r\n            maxWidth: 400,\r\n            minHeight: 500,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            left: 0,\r\n            right: 0,\r\n            top: '40px',\r\n            margin: '0 auto',\r\n            [theme.breakpoints.down('xs')]: {\r\n                maxWidth: 300,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!place) return <div>Loading...</div>\r\n    return (\r\n        <Modal\r\n            open={!!place}\r\n            onClose={onCloseModal}\r\n            className={classes.modal}>\r\n            <section className={`${classes.paper} column-layout`}>\r\n                <button className=\"close-btn align-self-start\" onClick={onCloseModal}></button>\r\n                {isEdit ? <EditPlace toggleIsEdit={toggleEdit} classes={classes} place={place} /> :\r\n                    <PlaceDetails onCloseModal={onCloseModal} toggleIsEdit={(event) => toggleEdit(event)} classes={classes}  place={place} />}\r\n            </section>\r\n\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PlaceModal } from '../cmps/PlaceModal'\r\nimport { selectPlace, reOrgenizePlaces } from '../actions/placeActions.js';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport function TableCmp(props) {\r\n    const dispatch = useDispatch()\r\n    const { filterBy, selectedPlace, places } = useSelector(state => state.placeReducer)\r\n    let [placesToShow, setPlacesToShow] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPlacesToShow(filterBy)\r\n    }, [places, filterBy])\r\n\r\n    async function getPlacesToShow(filterBy) {\r\n        if (filterBy && filterBy.title) {\r\n            const { title } = filterBy\r\n            setPlacesToShow(placesToShow = places.filter(place => place.title.toLowerCase().includes(title.toLowerCase())))\r\n        } else {\r\n            console.log('places, ',places)\r\n            setPlacesToShow(places)\r\n        }\r\n    }\r\n\r\n    function onSelectPlace(placeId = '') {\r\n        dispatch(selectPlace(placeId))\r\n    }\r\n\r\n    const windowSize = useMediaQuery('(max-width:600px)');\r\n    function getLat(place) {\r\n        if (!windowSize) return place.position.lat;\r\n        else return place.position.lat.toFixed(2) + '...';\r\n    }\r\n    function getLng(place) {\r\n        if (!windowSize) return place.position.lng;\r\n        else return place.position.lng.toFixed(2) + '...';\r\n    }\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n            backgroundColor: '#01c5c4',\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: 10,\r\n                fontSize: 12\r\n            },\r\n        },\r\n    }))(TableCell);\r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }))(TableRow);\r\n    const useStyles = makeStyles((theme) => ({\r\n        table: {\r\n            width: '100%',\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    function handleDragEnd(res) {\r\n        if (!res.destination) return\r\n        const currPlaces = Array.from(placesToShow);\r\n        const movedPlaceIdx = res.source.index;\r\n        const destinationIdx = res.destination.index;\r\n        const [recordedPlace] = currPlaces.splice(movedPlaceIdx, 1);\r\n        currPlaces.splice(destinationIdx, 0, recordedPlace);\r\n        try {\r\n            setPlacesToShow(currPlaces);\r\n            dispatch(reOrgenizePlaces(movedPlaceIdx,destinationIdx));\r\n            console.log('places after dnd, ',places);\r\n        }\r\n        catch {\r\n            console.log('basa');\r\n        }\r\n    }\r\n    if (!placesToShow.length) return <h1>No matching results</h1>\r\n    else return (\r\n        <React.Fragment>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Name </StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lang</StyledTableCell>\r\n                            <StyledTableCell align=\"left\">Lat</StyledTableCell>\r\n                            <StyledTableCell align=\"left\"></StyledTableCell>\r\n                        </TableRow>\r\n\r\n                    </TableHead>\r\n                    <DragDropContext onDragEnd={handleDragEnd}>\r\n                        <Droppable droppableId=\"Place\">\r\n                            {(provided) => (\r\n                                <TableBody {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {placesToShow.map((place, idx) => (\r\n                                        <Draggable key={place._id} draggableId={place._id} index={idx}>\r\n                                            {(provided) => (\r\n\r\n\r\n                                                <StyledTableRow key={place._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                                                        {place.title || 'No title yet'}\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\">{getLat(place)}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\">{getLng(place)}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\" className=\"description-slot column-layout\">\r\n\r\n                                                        <button onClick={() => onSelectPlace(place._id)}>Show more</button>\r\n                                                    </StyledTableCell>\r\n                                                </StyledTableRow>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </TableBody>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </Table>\r\n            </TableContainer>\r\n            {selectedPlace && <PlaceModal closeModal={onSelectPlace} place={selectedPlace} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setNotification } from '../actions/notificationActions'\r\nimport { setCenter, savePlace } from '../actions/placeActions'\r\n\r\nexport function CurrLocationBtn(props) {\r\n    const dispatch = useDispatch()\r\n    const { places } = useSelector(state => state.placeReducer);\r\n\r\n    function onSetCurrLocation() {\r\n\r\n        function setCurrLocation(pos) {\r\n            const position = {\r\n                lat: pos.coords.latitude,\r\n                lng: pos.coords.longitude\r\n            }\r\n            try {\r\n                dispatch(setCenter(position))\r\n                const currPlaceInList = places.find(place => (place.position.lat === position.lat && place.position.lng === position.lng))\r\n                if (!currPlaceInList) {\r\n                   const newMarker = {\r\n                        position,\r\n                        title : 'Current place',\r\n                        description : ''\r\n                    }\r\n                    dispatch(savePlace(newMarker))\r\n                }\r\n            }\r\n            catch {\r\n                dispatch(setNotification('err', `OOPS! Could'nt get your current location`))\r\n\r\n            }\r\n\r\n        }\r\n        function error(err) {\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n            dispatch(setNotification('err', `OOPS! Could'nt get your current location`))\r\n        }\r\n        navigator.geolocation.getCurrentPosition(setCurrLocation, error);\r\n    }\r\n    return (\r\n        <button onClick={onSetCurrLocation} className=\"align-self-start\">Set your location!</button>\r\n    );\r\n}","import React from 'react';\r\nimport { useForm } from '../services/customHooks'\r\nimport { useDispatch,  } from 'react-redux'\r\nimport { setFilter } from '../actions/placeActions.js';\r\n\r\nexport function Filter() {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [filterBy, handleChange] = useForm({ title: ''},onFilter)\r\n    const { title } = filterBy\r\n                function onFilter() {\r\n                    if(filterBy === undefined) return\r\n                    dispatch(setFilter(filterBy))\r\n                }\r\n        return (\r\n            <div className=\"places-filter-container\">\r\n                <input autoComplete=\"off\" name=\"title\" type=\"text\" value={title} onChange={handleChange} placeholder=\"Search for a place\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n","import React from 'react';\r\nimport GoogleMap from '../cmps/GoogleMap'\r\nimport { TableCmp } from '../cmps/TableCmp'\r\nimport {CurrLocationBtn} from '../cmps/CurrLocationBtn'\r\nimport {Filter} from '../cmps/Filter'\r\n\r\nexport function MainApp(props){\r\n\r\n    return (\r\n\r\n      <section className=\"main-app-container  column-layout\" >\r\n        <section className=\"column-layout\">\r\n          <GoogleMap />\r\n          <CurrLocationBtn />\r\n        </section>\r\n        <section className=\"table-cmp-container\">\r\n          <Filter/>\r\n          <TableCmp />\r\n        </section>\r\n      </section>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { fadeInDown, fadeOutUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { clearNotification } from '../actions/notificationActions.js'\r\n// import ClearIcon from '@material-ui/icons/Clear';\r\n// import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n// import CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\r\n\r\nexport function Notification(props) {\r\n    const dispatch = useDispatch()\r\n    let notificationLifeCycle = null\r\n\r\n\r\n    useEffect(() => {\r\n        notificationLifeCycle = setTimeout(() => {\r\n            dispatch(clearNotification())\r\n        }, 4000)\r\n        return () =>{\r\n            clearTimeout(notificationLifeCycle)\r\n        }\r\n    })\r\n    const { kind, txt } = useSelector(state => state.notificationReducer);\r\n    const notificationBox = useRef(null)\r\n\r\n    const styles = {\r\n        fadeInDown: {\r\n            animation: 'x 0.5s',\r\n            animationName: Radium.keyframes(fadeInDown, 'fadeInDown')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <StyleRoot>\r\n            <div ref={notificationBox} style={styles.fadeInDown} className={`notification-box ${kind}`}>\r\n                <p>\r\n                    {txt}\r\n                </p>\r\n            </div>\r\n        </StyleRoot >\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {   savePlace } from '../actions/placeActions.js';\r\nimport { setNotification } from '../actions/notificationActions'\r\nfunction ResturantCard({ resturant }) {\r\n    const dispatch = useDispatch()\r\n    const { vicinity, name,photos,permanently_closed,geometry} = resturant\r\n    const photoReference = photos ? photos[0].photo_reference : null\r\n    let imgUrl = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=200&photoreference=${photoReference}&key=AIzaSyARhJCj-KdXS-t0qh0QBlZLvhzJlyQ36EQ` || require('../assets/imgs/logo.png')\r\n    const isExsictingNotification = useSelector(state => state.notificationReducer.txt);\r\n\r\n    function onSetResturantOnMap(){\r\n        const newMapMarker ={\r\n            position:geometry.location,\r\n            title:name,\r\n            description:''\r\n        }\r\n        try{\r\n            dispatch(savePlace(newMapMarker)) \r\n            dispatch(setNotification('success', `Successfully set \"${name}\" on map`,!!isExsictingNotification))\r\n        }\r\n        catch{\r\n            dispatch(setNotification('err', `OOPS! something went wrong, could'nt set this resturant on map`,!!isExsictingNotification))\r\n        }\r\n    }\r\n    const img =React.createRef()\r\n    function onImgError(){\r\n\r\n        img.current.src =  require('../assets/imgs/logo.png')\r\n        img.current.className=\"default-img\"\r\n    }\r\n\r\n\r\n\r\n    if (permanently_closed) return null\r\n    return (\r\n        <article className=\"resturant-card flex\">\r\n            <div className=\"resturant-img-container\">\r\n           <img ref={img} src={imgUrl} onError={onImgError} alt=\"\"/>\r\n           </div>\r\n            <div className=\"resturant-details full-width\">\r\n                <h3 className=\"resturant-title\">{name}</h3>\r\n                <p>{vicinity}</p>\r\n                <br/>\r\n                <button onClick={onSetResturantOnMap}>Set on map</button>\r\n\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ResturantCard;","import React from 'react';\r\nimport ResturantCard from '../cmps/ResturantCard'\r\n\r\nfunction ResturantList({ resturants }) {\r\n    console.log('resturants in list, ', resturants)\r\n    return (\r\n        <ul className=\"resturant-list clean-list column-layout\">\r\n            {resturants.map(resturant => {\r\n                return <ResturantCard resturant={resturant} key={resturant.place_id} />\r\n            })}\r\n\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ResturantList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setLoader } from '../actions/systemActions'\r\nimport { mainService } from '../services/mainService'\r\nimport { googleResturantsService } from '../services/googleResturantsService'\r\nimport ResturantList from '../cmps/ResturantList'\r\n\r\nfunction PlaceResturants() {\r\n    const dispatch = useDispatch()\r\n    const [place, setPlace] = useState(null)\r\n    const [apiData, setApiData] = useState(null)\r\n    const [resturants, setResturants] = useState([])\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        getPlace()\r\n        if (place) getNearbyResturants()\r\n\r\n    }, [place])\r\n\r\n    async function getPlace() {\r\n        const currPlace = await mainService.getById(id)\r\n        setPlace(currPlace)\r\n        console.log('currPlace is ,', currPlace)\r\n\r\n    }\r\n    async function getNearbyResturants(isLoadMore = false) {\r\n        dispatch(setLoader())\r\n\r\n        const { lat, lng } = place.position\r\n        const currPagePosition = window.pageYOffset\r\n\r\n        try {\r\n            let newApiData = null\r\n            if (!isLoadMore) {\r\n                newApiData = await googleResturantsService.getResturantsFromGoogle(lat, lng)\r\n            }\r\n            else {\r\n                console.log('apiData.next_page_token ', apiData.next_page_token)\r\n                newApiData = await googleResturantsService.getResturantsFromGoogle(lat, lng, apiData.next_page_token)\r\n            }\r\n            setApiData(newApiData)\r\n            setResturants(resturants.concat(newApiData.results))\r\n            window.scrollTo(0, currPagePosition)\r\n            dispatch(setLoader())\r\n        }\r\n        catch {\r\n            console.log('basa')\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"resturants-page\">\r\n\r\n            {(place && resturants.length) ?\r\n                <React.Fragment>\r\n                    <h1>Resturants near {place.title}</h1>\r\n                    <ResturantList resturants={resturants} />\r\n                </React.Fragment> : null\r\n            }\r\n            {(!place || (apiData && !apiData.results.length)) &&\r\n                <React.Fragment>\r\n\r\n                    <h1>OOPS! information is unavilable</h1>\r\n\r\n                </React.Fragment>\r\n            }\r\n            {apiData && apiData.next_page_token &&\r\n                <div className=\"btn-container full-width text-center\">\r\n                    <button onClick={() => getNearbyResturants(true)}>Show more</button>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaceResturants;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { About } from './pages/About';\nimport { Navbar } from './cmps/Navbar';\nimport { Footer } from './cmps/Footer';\nimport { MainApp } from './pages/MainApp'\nimport { Notification } from './cmps/Notification'\nimport { useSelector } from 'react-redux'\nimport PlaceResturants from './pages/PlaceResturants';\nimport Loader from 'react-loader-spinner'\n\n\n\nfunction App() {\n  const currNotification = useSelector(state => state.notificationReducer.txt);\n  const isLoader = useSelector(state => state.systemReducer.isLoading);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route path=\"/resturants/:id\" component={PlaceResturants} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" component={MainApp} />\n          </Switch>\n        </main>\n        <Footer />\n      </Router>\n      {currNotification && <Notification />}\n      {isLoader && <div className=\"loader-container\">\n        <Loader\n          type=\"Oval\"\n          color=\"#f39233\"\n          height={100}\n          width={100}\n        />\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {initialCenterService} from '../services/InitialCenterService'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    filterBy: null,\r\n    selectedPlace:null,\r\n    initialCenter:initialCenterService.loadInitialCenter() ||{\r\n        lat: 40.854885,\r\n        lng: -88.081807\r\n      },\r\n    center:null,\r\n}\r\n\r\nexport function placeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PLACES':\r\n            return {\r\n                ...state,\r\n                places: action.places\r\n            }\r\n        case 'SET_INITIAL_CENTER':\r\n            return {\r\n                ...state,\r\n                initialCenter: action.position\r\n            }\r\n        case 'SET_CENTER':\r\n            return {\r\n                ...state,\r\n                center: action.position,\r\n            }\r\n            case 'SELECT_PLACE':\r\n                return {\r\n                    ...state,\r\n                    selectedPlace: action.selectedPlace\r\n                }\r\n            case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filterBy\r\n            }\r\n        case 'ADD_PLACE':\r\n            return {\r\n                ...state,\r\n                places: [...state.places, action.place]\r\n            }\r\n        case 'UPDATE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.map(place => {\r\n                    if (place._id === action.place._id) return action.place;\r\n                    return place;\r\n                })\r\n            }\r\n        case 'REMOVE_PLACE':\r\n            return {\r\n                ...state,\r\n                places: state.places.filter(place => place._id !== action.placeId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    txt: '',\r\n    kind: ''\r\n}\r\n\r\nexport function notificationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: action.txt,\r\n                kind: action.kind\r\n            }\r\n        case 'CLEAR_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                txt: '',\r\n                kind:''\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer'\r\nimport systemReducer from './systemReducer';\r\nimport { placeReducer } from './placeReducer';\r\nimport { notificationReducer } from './notificationReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  systemReducer: systemReducer,\r\n  placeReducer: placeReducer,\r\n  notificationReducer:notificationReducer,\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7802c6aa.png\";"],"sourceRoot":""}